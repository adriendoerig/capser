node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "./data/train.tfrecords"
      }
    }
  }
}
node {
  name: "flat_filenames/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flat_filenames"
  op: "Reshape"
  input: "Const"
  input: "flat_filenames/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "cycle_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 32
      }
    }
  }
}
node {
  name: "block_length"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "sloppy"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "buffer_output_elements"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "prefetch_input_elements"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "num_parallel_calls"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1024
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "batch_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2
      }
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_o8YG1aucJs8"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          unknown_rank: true
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377-\000\000\000d\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "IteratorGetNext"
  input: "Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377-\000\000\000d\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "IteratorGetNext:1"
  input: "Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "@\000\000\000-\000\000\000d\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "Reshape"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "input/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "input"
      }
    }
  }
}
node {
  name: "input"
  op: "ImageSummary"
  input: "input/tag"
  input: "Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 6
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "IteratorGetNext:2"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "PlaceholderWithDefault"
  op: "PlaceholderWithDefault"
  input: "zeros"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "mask_with_labels/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "mask_with_labels"
  op: "PlaceholderWithDefault"
  input: "mask_with_labels/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "is_training/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "is_training"
  op: "PlaceholderWithDefault"
  input: "is_training/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "conv1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06091449037194252
      }
    }
  }
}
node {
  name: "conv1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06091449037194252
      }
    }
  }
}
node {
  name: "conv1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv1/kernel/Initializer/random_uniform/max"
  input: "conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv1/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv1/kernel/Initializer/random_uniform/mul"
  input: "conv1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/kernel/Assign"
  op: "Assign"
  input: "conv1/kernel"
  input: "conv1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/kernel/read"
  op: "Identity"
  input: "conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bias/Assign"
  op: "Assign"
  input: "conv1/bias"
  input: "conv1/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bias/read"
  op: "Identity"
  input: "conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "0_early_conv_layers/conv1/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "0_early_conv_layers/conv1/Conv2D"
  op: "Conv2D"
  input: "Reshape"
  input: "conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
          dim {
            size: 94
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "0_early_conv_layers/conv1/BiasAdd"
  op: "BiasAdd"
  input: "0_early_conv_layers/conv1/Conv2D"
  input: "conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
          dim {
            size: 94
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "0_early_conv_layers/conv1/Elu"
  op: "Elu"
  input: "0_early_conv_layers/conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
          dim {
            size: 94
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "0_early_conv_layers/1st_conv_layer/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "0_early_conv_layers/1st_conv_layer"
      }
    }
  }
}
node {
  name: "0_early_conv_layers/1st_conv_layer"
  op: "HistogramSummary"
  input: "0_early_conv_layers/1st_conv_layer/tag"
  input: "0_early_conv_layers/conv1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0437408871948719
      }
    }
  }
}
node {
  name: "conv2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0437408871948719
      }
    }
  }
}
node {
  name: "conv2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv2/kernel/Initializer/random_uniform/max"
  input: "conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv2/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv2/kernel/Initializer/random_uniform/mul"
  input: "conv2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/kernel/Assign"
  op: "Assign"
  input: "conv2/kernel"
  input: "conv2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/kernel/read"
  op: "Identity"
  input: "conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bias/Assign"
  op: "Assign"
  input: "conv2/bias"
  input: "conv2/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bias/read"
  op: "Identity"
  input: "conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "0_early_conv_layers/conv2/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "0_early_conv_layers/conv2/Conv2D"
  op: "Conv2D"
  input: "0_early_conv_layers/conv1/Elu"
  input: "conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 17
          }
          dim {
            size: 44
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "0_early_conv_layers/conv2/BiasAdd"
  op: "BiasAdd"
  input: "0_early_conv_layers/conv2/Conv2D"
  input: "conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 17
          }
          dim {
            size: 44
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "0_early_conv_layers/conv2/Elu"
  op: "Elu"
  input: "0_early_conv_layers/conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 17
          }
          dim {
            size: 44
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "0_early_conv_layers/2nd_conv_layer/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "0_early_conv_layers/2nd_conv_layer"
      }
    }
  }
}
node {
  name: "0_early_conv_layers/2nd_conv_layer"
  op: "HistogramSummary"
  input: "0_early_conv_layers/2nd_conv_layer/tag"
  input: "0_early_conv_layers/conv2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03227486088871956
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03227486088871956
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv_for_caps/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "conv_for_caps/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "conv_for_caps/kernel/Initializer/random_uniform/max"
  input: "conv_for_caps/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "conv_for_caps/kernel/Initializer/random_uniform/RandomUniform"
  input: "conv_for_caps/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Initializer/random_uniform"
  op: "Add"
  input: "conv_for_caps/kernel/Initializer/random_uniform/mul"
  input: "conv_for_caps/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_for_caps/kernel/Assign"
  op: "Assign"
  input: "conv_for_caps/kernel"
  input: "conv_for_caps/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_for_caps/kernel/read"
  op: "Identity"
  input: "conv_for_caps/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_for_caps/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_for_caps/bias/Assign"
  op: "Assign"
  input: "conv_for_caps/bias"
  input: "conv_for_caps/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_for_caps/bias/read"
  op: "Identity"
  input: "conv_for_caps/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/conv_for_caps/dilation_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/conv_for_caps/Conv2D"
  op: "Conv2D"
  input: "0_early_conv_layers/conv2/Elu"
  input: "conv_for_caps/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 20
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "1st_caps/primary_capsules/conv_for_caps/BiasAdd"
  op: "BiasAdd"
  input: "1st_caps/primary_capsules/conv_for_caps/Conv2D"
  input: "conv_for_caps/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 20
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "1st_caps/primary_capsules/conv_for_caps/Elu"
  op: "Elu"
  input: "1st_caps/primary_capsules/conv_for_caps/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 6
          }
          dim {
            size: 20
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps_per_map/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 120.0
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps_per_map"
  op: "Cast"
  input: "1st_caps/primary_capsules/caps_per_map/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_raw_with_maps/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_raw_with_maps/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_raw_with_maps/shape/3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_raw_with_maps/shape"
  op: "Pack"
  input: "1st_caps/primary_capsules/caps1_raw_with_maps/shape/0"
  input: "1st_caps/primary_capsules/caps1_raw_with_maps/shape/1"
  input: "1st_caps/primary_capsules/caps_per_map"
  input: "1st_caps/primary_capsules/caps1_raw_with_maps/shape/3"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_raw_with_maps"
  op: "Reshape"
  input: "1st_caps/primary_capsules/conv_for_caps/Elu"
  input: "1st_caps/primary_capsules/caps1_raw_with_maps/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_raw/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_raw"
  op: "Reshape"
  input: "1st_caps/primary_capsules/conv_for_caps/Elu"
  input: "1st_caps/primary_capsules/caps1_raw/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/Square"
  op: "Square"
  input: "1st_caps/primary_capsules/caps1_raw"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/Sum"
  op: "Sum"
  input: "1st_caps/primary_capsules/caps1_output/Square"
  input: "1st_caps/primary_capsules/caps1_output/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/add"
  op: "Add"
  input: "1st_caps/primary_capsules/caps1_output/Sum"
  input: "1st_caps/primary_capsules/caps1_output/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/Sqrt"
  op: "Sqrt"
  input: "1st_caps/primary_capsules/caps1_output/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/add_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/add_1"
  op: "Add"
  input: "1st_caps/primary_capsules/caps1_output/add_1/x"
  input: "1st_caps/primary_capsules/caps1_output/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/truediv"
  op: "RealDiv"
  input: "1st_caps/primary_capsules/caps1_output/Sum"
  input: "1st_caps/primary_capsules/caps1_output/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/truediv_1"
  op: "RealDiv"
  input: "1st_caps/primary_capsules/caps1_raw"
  input: "1st_caps/primary_capsules/caps1_output/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output/mul"
  op: "Mul"
  input: "1st_caps/primary_capsules/caps1_output/truediv"
  input: "1st_caps/primary_capsules/caps1_output/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/Square"
  op: "Square"
  input: "1st_caps/primary_capsules/caps1_raw_with_maps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/Sum"
  op: "Sum"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/Square"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/add"
  op: "Add"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/Sum"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/Sqrt"
  op: "Sqrt"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/add_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/add_1"
  op: "Add"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/add_1/x"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/truediv"
  op: "RealDiv"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/Sum"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/truediv_1"
  op: "RealDiv"
  input: "1st_caps/primary_capsules/caps1_raw_with_maps"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsules/caps1_output_with_maps/mul"
  op: "Mul"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/truediv"
  input: "1st_caps/primary_capsules/caps1_output_with_maps/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 120
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsule_norms/Square"
  op: "Square"
  input: "1st_caps/primary_capsules/caps1_output/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsule_norms/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsule_norms/Sum"
  op: "Sum"
  input: "1st_caps/primary_capsule_norms/Square"
  input: "1st_caps/primary_capsule_norms/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "1st_caps/primary_capsule_norms/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsule_norms/add"
  op: "Add"
  input: "1st_caps/primary_capsule_norms/Sum"
  input: "1st_caps/primary_capsule_norms/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/primary_capsule_norms/Sqrt"
  op: "Sqrt"
  input: "1st_caps/primary_capsule_norms/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
}
node {
  name: "1st_caps/Primary_capsule_norms_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "1st_caps/Primary_capsule_norms_1"
      }
    }
  }
}
node {
  name: "1st_caps/Primary_capsule_norms_1"
  op: "HistogramSummary"
  input: "1st_caps/Primary_capsule_norms_1/tag"
  input: "1st_caps/primary_capsule_norms/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\010\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/mul"
  op: "Mul"
  input: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/RandomStandardNormal"
  input: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Initializer/W_init"
  op: "Add"
  input: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/mul"
  input: "2nd_caps/primary_to_first_fc/W/Initializer/W_init/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Assign"
  op: "Assign"
  input: "2nd_caps/primary_to_first_fc/W"
  input: "2nd_caps/primary_to_first_fc/W/Initializer/W_init"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/read"
  op: "Identity"
  input: "2nd_caps/primary_to_first_fc/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W_tiled/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W_tiled"
  op: "Tile"
  input: "2nd_caps/primary_to_first_fc/W/read"
  input: "2nd_caps/primary_to_first_fc/W_tiled/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/caps1_output_expanded/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/caps1_output_expanded"
  op: "ExpandDims"
  input: "1st_caps/primary_capsules/caps1_output/mul"
  input: "2nd_caps/primary_to_first_fc/caps1_output_expanded/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/caps1_output_tile/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/caps1_output_tile"
  op: "ExpandDims"
  input: "2nd_caps/primary_to_first_fc/caps1_output_expanded"
  input: "2nd_caps/primary_to_first_fc/caps1_output_tile/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/caps1_output_tiled/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/caps1_output_tiled"
  op: "Tile"
  input: "2nd_caps/primary_to_first_fc/caps1_output_tile"
  input: "2nd_caps/primary_to_first_fc/caps1_output_tiled/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/caps2_predicted"
  op: "BatchMatMul"
  input: "2nd_caps/primary_to_first_fc/W_tiled"
  input: "2nd_caps/primary_to_first_fc/caps1_output_tiled"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/raw_weights/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/raw_weights/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/raw_weights"
  op: "Fill"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/raw_weights/shape_as_tensor"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/raw_weights/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/rba_iteration_counter"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/caps2_output/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/caps2_output/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/caps2_output"
  op: "Fill"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/caps2_output/shape_as_tensor"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/caps2_output/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter"
  op: "Enter"
  input: "2nd_caps/primary_to_first_fc/caps2_predicted"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_1"
  op: "Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/caps2_output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_2"
  op: "Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/raw_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_3"
  op: "Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/rba_iteration_counter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge"
  op: "Merge"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1"
  op: "Merge"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_1"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2"
  op: "Merge"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_3"
  op: "Merge"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_3"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/do_routing_cond/y"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/do_routing_cond"
  op: "Less"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_3"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/do_routing_cond/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/LoopCond"
  op: "LoopCond"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/do_routing_cond"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch"
  op: "Switch"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1"
  op: "Switch"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2"
  op: "Switch"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_3"
  op: "Switch"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_3"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  op: "Identity"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity_1"
  op: "Identity"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity_2"
  op: "Identity"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity_3"
  op: "Identity"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Rank"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub/y"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub"
  op: "Sub"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Rank"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range/start"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range/limit"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range/delta"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range"
  op: "Range"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range/start"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range/limit"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_1/start"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_1/delta"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_1"
  op: "Range"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_1/start"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat/values_1"
  op: "Pack"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat/values_3"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat/axis"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat"
  op: "ConcatV2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat/values_1"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_1"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat/values_3"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose"
  op: "Transpose"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity_2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Shape"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Rank_1"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Shape_1"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_1/y"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_1"
  op: "Sub"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Rank_1"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Slice/begin"
  op: "Pack"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Slice/size"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Slice"
  op: "Slice"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Shape_1"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Slice/begin"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_1/values_0"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_1/axis"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_1"
  op: "ConcatV2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_1/values_0"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Slice"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape"
  op: "Reshape"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax"
  op: "Softmax"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_1"
  op: "Reshape"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_2/y"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_2"
  op: "Sub"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Rank"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_2/start"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_2/limit"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_2/delta"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_2"
  op: "Range"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_2/start"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_2/limit"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_3/start"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_3/delta"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_3"
  op: "Range"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_3/start"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2/values_1"
  op: "Pack"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2/values_3"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2/axis"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2"
  op: "ConcatV2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2/values_1"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/range_3"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2/values_3"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights"
  op: "Transpose"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_1"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions"
  op: "Mul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum/reduction_indices"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum"
  op: "Sum"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Square"
  op: "Square"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum/reduction_indices"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum"
  op: "Sum"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Square"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add/y"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add"
  op: "Add"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sqrt"
  op: "Sqrt"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1/x"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1"
  op: "Add"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1/x"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv"
  op: "RealDiv"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1"
  op: "RealDiv"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul"
  op: "Mul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled/multiples"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled"
  op: "Tile"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement"
  op: "BatchMatMul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new"
  op: "Add"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity_2"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Add/y"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Add"
  op: "Add"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity_3"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/NextIteration"
  op: "NextIteration"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/NextIteration_1"
  op: "NextIteration"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/NextIteration_2"
  op: "NextIteration"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/NextIteration_3"
  op: "NextIteration"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit"
  op: "Exit"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  op: "Exit"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_2"
  op: "Exit"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_3"
  op: "Exit"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/strided_slice"
  op: "StridedSlice"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  input: "2nd_caps/strided_slice/stack"
  input: "2nd_caps/strided_slice/stack_1"
  input: "2nd_caps/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 14
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 14
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "2nd_caps/caps2_output_norm/Square"
  op: "Square"
  input: "2nd_caps/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/caps2_output_norm/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "2nd_caps/caps2_output_norm/Sum"
  op: "Sum"
  input: "2nd_caps/caps2_output_norm/Square"
  input: "2nd_caps/caps2_output_norm/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "2nd_caps/caps2_output_norm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "2nd_caps/caps2_output_norm/add"
  op: "Add"
  input: "2nd_caps/caps2_output_norm/Sum"
  input: "2nd_caps/caps2_output_norm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/caps2_output_norm/Sqrt"
  op: "Sqrt"
  input: "2nd_caps/caps2_output_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/Squeeze"
  op: "Squeeze"
  input: "2nd_caps/caps2_output_norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "2nd_caps/Output_capsule_norms/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "2nd_caps/Output_capsule_norms"
      }
    }
  }
}
node {
  name: "2nd_caps/Output_capsule_norms"
  op: "HistogramSummary"
  input: "2nd_caps/Output_capsule_norms/tag"
  input: "2nd_caps/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/y_proba/Square"
  op: "Square"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/y_proba/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/y_proba/Sum"
  op: "Sum"
  input: "2nd_caps/net_prediction/y_proba/Square"
  input: "2nd_caps/net_prediction/y_proba/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "2nd_caps/net_prediction/y_proba/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/y_proba/add"
  op: "Add"
  input: "2nd_caps/net_prediction/y_proba/Sum"
  input: "2nd_caps/net_prediction/y_proba/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/y_proba/Sqrt"
  op: "Sqrt"
  input: "2nd_caps/net_prediction/y_proba/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/strided_slice"
  op: "StridedSlice"
  input: "2nd_caps/net_prediction/y_proba/Sqrt"
  input: "2nd_caps/net_prediction/strided_slice/stack"
  input: "2nd_caps/net_prediction/strided_slice/stack_1"
  input: "2nd_caps/net_prediction/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 5
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 10
    }
  }
}
node {
  name: "2nd_caps/net_prediction/y_proba_1/k"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "2nd_caps/net_prediction/y_proba_1"
  op: "TopKV2"
  input: "2nd_caps/net_prediction/strided_slice"
  input: "2nd_caps/net_prediction/y_proba_1/k"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "2nd_caps/net_prediction/Cast"
  op: "Cast"
  input: "2nd_caps/net_prediction/y_proba_1:1"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/one_hot"
  op: "OneHot"
  input: "Cast"
  input: "2nd_caps/margin_loss/one_hot/depth"
  input: "2nd_caps/margin_loss/one_hot/on_value"
  input: "2nd_caps/margin_loss/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Sum"
  op: "Sum"
  input: "2nd_caps/margin_loss/one_hot"
  input: "2nd_caps/margin_loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Minimum"
  op: "Minimum"
  input: "2nd_caps/margin_loss/Sum"
  input: "2nd_caps/margin_loss/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/caps2_output_norm/Square"
  op: "Square"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/caps2_output_norm/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/caps2_output_norm/Sum"
  op: "Sum"
  input: "2nd_caps/margin_loss/caps2_output_norm/Square"
  input: "2nd_caps/margin_loss/caps2_output_norm/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "2nd_caps/margin_loss/caps2_output_norm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/caps2_output_norm/add"
  op: "Add"
  input: "2nd_caps/margin_loss/caps2_output_norm/Sum"
  input: "2nd_caps/margin_loss/caps2_output_norm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/caps2_output_norm/Sqrt"
  op: "Sqrt"
  input: "2nd_caps/margin_loss/caps2_output_norm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/sub"
  op: "Sub"
  input: "2nd_caps/margin_loss/sub/x"
  input: "2nd_caps/margin_loss/caps2_output_norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Maximum"
  op: "Maximum"
  input: "2nd_caps/margin_loss/Maximum/x"
  input: "2nd_caps/margin_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/present_error_raw"
  op: "Square"
  input: "2nd_caps/margin_loss/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/present_error/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/present_error"
  op: "Reshape"
  input: "2nd_caps/margin_loss/present_error_raw"
  input: "2nd_caps/margin_loss/present_error/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/sub_1"
  op: "Sub"
  input: "2nd_caps/margin_loss/caps2_output_norm/Sqrt"
  input: "2nd_caps/margin_loss/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Maximum_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Maximum_1"
  op: "Maximum"
  input: "2nd_caps/margin_loss/Maximum_1/x"
  input: "2nd_caps/margin_loss/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/absent_error_raw"
  op: "Square"
  input: "2nd_caps/margin_loss/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/absent_error/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/absent_error"
  op: "Reshape"
  input: "2nd_caps/margin_loss/absent_error_raw"
  input: "2nd_caps/margin_loss/absent_error/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/mul"
  op: "Mul"
  input: "2nd_caps/margin_loss/Minimum"
  input: "2nd_caps/margin_loss/present_error"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/sub_2"
  op: "Sub"
  input: "2nd_caps/margin_loss/sub_2/x"
  input: "2nd_caps/margin_loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/mul_1"
  op: "Mul"
  input: "2nd_caps/margin_loss/mul_1/x"
  input: "2nd_caps/margin_loss/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/mul_2"
  op: "Mul"
  input: "2nd_caps/margin_loss/mul_1"
  input: "2nd_caps/margin_loss/absent_error"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/L"
  op: "Add"
  input: "2nd_caps/margin_loss/mul"
  input: "2nd_caps/margin_loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Sum_1"
  op: "Sum"
  input: "2nd_caps/margin_loss/L"
  input: "2nd_caps/margin_loss/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "2nd_caps/margin_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "2nd_caps/margin_loss/margin_loss"
  op: "Mean"
  input: "2nd_caps/margin_loss/Sum_1"
  input: "2nd_caps/margin_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/strided_slice"
  op: "StridedSlice"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  input: "decoders/vernier_offset_loss/strided_slice/stack"
  input: "decoders/vernier_offset_loss/strided_slice/stack_1"
  input: "decoders/vernier_offset_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 9
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 9
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 22
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/Cast"
  op: "Cast"
  input: "IteratorGetNext:3"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/one_hot/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/one_hot/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/one_hot/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/one_hot"
  op: "OneHot"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/Cast"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/one_hot/depth"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/one_hot/on_value"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/one_hot/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "offset_logits/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.5773502588272095
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5773502588272095
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "offset_logits/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "offset_logits/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "offset_logits/kernel/Initializer/random_uniform/max"
  input: "offset_logits/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "offset_logits/kernel/Initializer/random_uniform/RandomUniform"
  input: "offset_logits/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Initializer/random_uniform"
  op: "Add"
  input: "offset_logits/kernel/Initializer/random_uniform/mul"
  input: "offset_logits/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "offset_logits/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "offset_logits/kernel/Assign"
  op: "Assign"
  input: "offset_logits/kernel"
  input: "offset_logits/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "offset_logits/kernel/read"
  op: "Identity"
  input: "offset_logits/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "offset_logits/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "offset_logits/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "offset_logits/bias/Assign"
  op: "Assign"
  input: "offset_logits/bias"
  input: "offset_logits/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "offset_logits/bias/read"
  op: "Identity"
  input: "offset_logits/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul"
  op: "MatMul"
  input: "decoders/vernier_offset_loss/strided_slice"
  input: "offset_logits/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd"
  op: "BiasAdd"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul"
  input: "offset_logits/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu"
  op: "Relu"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/labels_stop_gradient"
  op: "StopGradient"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/one_hot"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub"
  op: "Sub"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Rank_1"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice/begin"
  op: "Pack"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice"
  op: "Slice"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Shape_1"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice/begin"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat"
  op: "ConcatV2"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat/values_0"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape"
  op: "Reshape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Rank_2"
  op: "Rank"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Shape_2"
  op: "Shape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/labels_stop_gradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub_1"
  op: "Sub"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Rank_2"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  op: "Pack"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_1"
  op: "Slice"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Shape_2"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat_1"
  op: "ConcatV2"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_1"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_1"
  op: "Reshape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/labels_stop_gradient"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub_2"
  op: "Sub"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Rank"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_2/size"
  op: "Pack"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_2"
  op: "Slice"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Shape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_2"
  op: "Reshape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ToFloat/x"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ToFloat/x"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/Equal"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/zeros_like"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/Select"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ones_like/Shape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Equal"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ones_like"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/zeros_like"
  op: "Const"
  input: "^decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value"
  op: "Select"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Greater"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/training_vernier_offset_xentropy/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/vernier_offset_loss/vernier_offset_loss/training_vernier_offset_xentropy"
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/training_vernier_offset_xentropy"
  op: "ScalarSummary"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/training_vernier_offset_xentropy/tags"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/ArgMax/dimension"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/ArgMax"
  op: "ArgMax"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/Cast_1"
  op: "Cast"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/correct"
  op: "Equal"
  input: "IteratorGetNext:3"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/Cast_2"
  op: "Cast"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/correct"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/Rank"
  op: "Rank"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/range"
  op: "Range"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/range/start"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/Rank"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy"
  op: "Mean"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/Cast_2"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy_1"
      }
    }
  }
}
node {
  name: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy_1"
  op: "ScalarSummary"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy_1/tags"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/Shape"
  op: "Shape"
  input: "Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice"
  op: "StridedSlice"
  input: "decoders/reconstruction_loss/Shape"
  input: "decoders/reconstruction_loss/strided_slice/stack"
  input: "decoders/reconstruction_loss/strided_slice/stack_1"
  input: "decoders/reconstruction_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/strided_slice"
  op: "StridedSlice"
  input: "Cast"
  input: "decoders/reconstruction_loss/shape_0/strided_slice/stack"
  input: "decoders/reconstruction_loss/shape_0/strided_slice/stack_1"
  input: "decoders/reconstruction_loss/shape_0/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/strided_slice_1"
  op: "StridedSlice"
  input: "2nd_caps/net_prediction/Cast"
  input: "decoders/reconstruction_loss/shape_0/strided_slice_1/stack"
  input: "decoders/reconstruction_loss/shape_0/strided_slice_1/stack_1"
  input: "decoders/reconstruction_loss/shape_0/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Switch"
  op: "Switch"
  input: "mask_with_labels"
  input: "mask_with_labels"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/switch_t"
  op: "Identity"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/switch_f"
  op: "Identity"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/pred_id"
  op: "Identity"
  input: "mask_with_labels"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Switch_1"
  op: "Switch"
  input: "decoders/reconstruction_loss/shape_0/strided_slice"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoders/reconstruction_loss/shape_0/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Switch_2"
  op: "Switch"
  input: "decoders/reconstruction_loss/shape_0/strided_slice_1"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoders/reconstruction_loss/shape_0/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Merge"
  op: "Merge"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Switch_2"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask"
  op: "OneHot"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_targets/Merge"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask/depth"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask/on_value"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask_reshaped/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask_reshaped"
  op: "Reshape"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask_reshaped/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked"
  op: "Mul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask_reshaped"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input"
  op: "Reshape"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/max"
  input: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/RandomUniform"
  input: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/mul"
  input: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1/kernel"
  input: "shape_0/output_decoderhidden1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input"
  input: "shape_0/output_decoderhidden1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/gamma"
  input: "shape_0/output_decoderhidden1_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/beta"
  input: "shape_0/output_decoderhidden1_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/moving_mean/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/moving_mean"
  input: "shape_0/output_decoderhidden1_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/moving_mean/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/moving_variance/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/moving_variance"
  input: "shape_0/output_decoderhidden1_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/moving_variance/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean"
  op: "Mean"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/StopGradient"
  op: "StopGradient"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance"
  op: "Mean"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze"
  op: "Squeeze"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/sub"
  op: "Sub"
  input: "shape_0/output_decoderhidden1_bn/moving_mean/read"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/sub"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "shape_0/output_decoderhidden1_bn/moving_mean"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "shape_0/output_decoderhidden1_bn/moving_variance/read"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/sub"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "shape_0/output_decoderhidden1_bn/moving_variance"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt"
  input: "shape_0/output_decoderhidden1_bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub"
  op: "Sub"
  input: "shape_0/output_decoderhidden1_bn/beta/read"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden1_activation"
  op: "Elu"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden1_bn/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden1_bn"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden1_bn"
  op: "HistogramSummary"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden1_bn/tag"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden1_activation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/max"
  input: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/RandomUniform"
  input: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/mul"
  input: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2/kernel"
  input: "shape_0/output_decoderhidden2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden1_activation"
  input: "shape_0/output_decoderhidden2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Initializer/ones"
  op: "Fill"
  input: "shape_0/output_decoderhidden2_bn/gamma/Initializer/ones/shape_as_tensor"
  input: "shape_0/output_decoderhidden2_bn/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/gamma"
  input: "shape_0/output_decoderhidden2_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden2_bn/beta/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden2_bn/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/beta"
  input: "shape_0/output_decoderhidden2_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden2_bn/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden2_bn/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_mean/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/moving_mean"
  input: "shape_0/output_decoderhidden2_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_mean/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_variance/Initializer/ones"
  op: "Fill"
  input: "shape_0/output_decoderhidden2_bn/moving_variance/Initializer/ones/shape_as_tensor"
  input: "shape_0/output_decoderhidden2_bn/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_variance/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/moving_variance"
  input: "shape_0/output_decoderhidden2_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/moving_variance/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean"
  op: "Mean"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/StopGradient"
  op: "StopGradient"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance"
  op: "Mean"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze"
  op: "Squeeze"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/sub"
  op: "Sub"
  input: "shape_0/output_decoderhidden2_bn/moving_mean/read"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/sub"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "shape_0/output_decoderhidden2_bn/moving_mean"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "shape_0/output_decoderhidden2_bn/moving_variance/read"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/sub"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "shape_0/output_decoderhidden2_bn/moving_variance"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt"
  input: "shape_0/output_decoderhidden2_bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub"
  op: "Sub"
  input: "shape_0/output_decoderhidden2_bn/beta/read"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden2_activation"
  op: "Elu"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden2_bn/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden2_bn"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden2_bn"
  op: "HistogramSummary"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden2_bn/tag"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden2_activation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.032957084476947784
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.032957084476947784
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/max"
  input: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/RandomUniform"
  input: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Initializer/random_uniform"
  op: "Add"
  input: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/mul"
  input: "shape_0/output_decoder_output/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Assign"
  op: "Assign"
  input: "shape_0/output_decoder_output/kernel"
  input: "shape_0/output_decoder_output/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/read"
  op: "Identity"
  input: "shape_0/output_decoder_output/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4500
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoder_output/bias/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoder_output/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Assign"
  op: "Assign"
  input: "shape_0/output_decoder_output/bias"
  input: "shape_0/output_decoder_output/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/read"
  op: "Identity"
  input: "shape_0/output_decoder_output/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden2_activation"
  input: "shape_0/output_decoder_output/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd"
  op: "BiasAdd"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul"
  input: "shape_0/output_decoder_output/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid"
  op: "Sigmoid"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output_1"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output_1"
  op: "HistogramSummary"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output_1/tag"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/strided_slice"
  op: "StridedSlice"
  input: "Cast"
  input: "decoders/reconstruction_loss/shape_1/strided_slice/stack"
  input: "decoders/reconstruction_loss/shape_1/strided_slice/stack_1"
  input: "decoders/reconstruction_loss/shape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/strided_slice_1"
  op: "StridedSlice"
  input: "2nd_caps/net_prediction/Cast"
  input: "decoders/reconstruction_loss/shape_1/strided_slice_1/stack"
  input: "decoders/reconstruction_loss/shape_1/strided_slice_1/stack_1"
  input: "decoders/reconstruction_loss/shape_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Switch"
  op: "Switch"
  input: "mask_with_labels"
  input: "mask_with_labels"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/switch_t"
  op: "Identity"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/switch_f"
  op: "Identity"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/pred_id"
  op: "Identity"
  input: "mask_with_labels"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Switch_1"
  op: "Switch"
  input: "decoders/reconstruction_loss/shape_1/strided_slice"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoders/reconstruction_loss/shape_1/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Switch_2"
  op: "Switch"
  input: "decoders/reconstruction_loss/shape_1/strided_slice_1"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@decoders/reconstruction_loss/shape_1/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Merge"
  op: "Merge"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Switch_2"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask/on_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask/off_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask/depth"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask"
  op: "OneHot"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_targets/Merge"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask/depth"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask/on_value"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask/off_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "TI"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: -1
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask_reshaped/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask_reshaped"
  op: "Reshape"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask_reshaped/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked"
  op: "Mul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask_reshaped"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input"
  op: "Reshape"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09682458639144897
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09682458639144897
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/max"
  input: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/RandomUniform"
  input: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/mul"
  input: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1/kernel"
  input: "shape_1/output_decoderhidden1/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input"
  input: "shape_1/output_decoderhidden1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/gamma"
  input: "shape_1/output_decoderhidden1_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/beta"
  input: "shape_1/output_decoderhidden1_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/moving_mean/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/moving_mean/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/moving_mean"
  input: "shape_1/output_decoderhidden1_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/moving_mean/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/moving_variance/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/moving_variance/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/moving_variance"
  input: "shape_1/output_decoderhidden1_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/moving_variance/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean"
  op: "Mean"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/StopGradient"
  op: "StopGradient"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance"
  op: "Mean"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze"
  op: "Squeeze"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/sub"
  op: "Sub"
  input: "shape_1/output_decoderhidden1_bn/moving_mean/read"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/sub"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "shape_1/output_decoderhidden1_bn/moving_mean"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "shape_1/output_decoderhidden1_bn/moving_variance/read"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/sub"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "shape_1/output_decoderhidden1_bn/moving_variance"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt"
  input: "shape_1/output_decoderhidden1_bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub"
  op: "Sub"
  input: "shape_1/output_decoderhidden1_bn/beta/read"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden1_activation"
  op: "Elu"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden1_bn/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden1_bn"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden1_bn"
  op: "HistogramSummary"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden1_bn/tag"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden1_activation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/max"
  input: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/RandomUniform"
  input: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/mul"
  input: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2/kernel"
  input: "shape_1/output_decoderhidden2/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden1_activation"
  input: "shape_1/output_decoderhidden2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Initializer/ones"
  op: "Fill"
  input: "shape_1/output_decoderhidden2_bn/gamma/Initializer/ones/shape_as_tensor"
  input: "shape_1/output_decoderhidden2_bn/gamma/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/gamma"
  input: "shape_1/output_decoderhidden2_bn/gamma/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2_bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden2_bn/beta/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden2_bn/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/beta"
  input: "shape_1/output_decoderhidden2_bn/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2_bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden2_bn/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden2_bn/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_mean/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/moving_mean"
  input: "shape_1/output_decoderhidden2_bn/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_mean/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2_bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_variance/Initializer/ones"
  op: "Fill"
  input: "shape_1/output_decoderhidden2_bn/moving_variance/Initializer/ones/shape_as_tensor"
  input: "shape_1/output_decoderhidden2_bn/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_variance/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/moving_variance"
  input: "shape_1/output_decoderhidden2_bn/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/moving_variance/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2_bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean"
  op: "Mean"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/StopGradient"
  op: "StopGradient"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance"
  op: "Mean"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze"
  op: "Squeeze"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1"
  op: "Squeeze"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/sub"
  op: "Sub"
  input: "shape_1/output_decoderhidden2_bn/moving_mean/read"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/sub"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg"
  op: "AssignSub"
  input: "shape_1/output_decoderhidden2_bn/moving_mean"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "shape_1/output_decoderhidden2_bn/moving_variance/read"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/sub"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "shape_1/output_decoderhidden2_bn/moving_variance"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt"
  input: "shape_1/output_decoderhidden2_bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub"
  op: "Sub"
  input: "shape_1/output_decoderhidden2_bn/beta/read"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden2_activation"
  op: "Elu"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden2_bn/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden2_bn"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden2_bn"
  op: "HistogramSummary"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden2_bn/tag"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden2_activation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.032957084476947784
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.032957084476947784
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/max"
  input: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/RandomUniform"
  input: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Initializer/random_uniform"
  op: "Add"
  input: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/mul"
  input: "shape_1/output_decoder_output/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Assign"
  op: "Assign"
  input: "shape_1/output_decoder_output/kernel"
  input: "shape_1/output_decoder_output/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/read"
  op: "Identity"
  input: "shape_1/output_decoder_output/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4500
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoder_output/bias/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoder_output/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Assign"
  op: "Assign"
  input: "shape_1/output_decoder_output/bias"
  input: "shape_1/output_decoder_output/bias/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/read"
  op: "Identity"
  input: "shape_1/output_decoder_output/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden2_activation"
  input: "shape_1/output_decoder_output/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd"
  op: "BiasAdd"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul"
  input: "shape_1/output_decoder_output/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid"
  op: "Sigmoid"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output_1/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output_1"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output_1"
  op: "HistogramSummary"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output_1/tag"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/stack"
  op: "Pack"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoders/reconstruction_loss/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/transpose"
  op: "Transpose"
  input: "decoders/reconstruction_loss/stack"
  input: "decoders/reconstruction_loss/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice"
  op: "StridedSlice"
  input: "Cast"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice/stack"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice/stack_1"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/ones_like"
  op: "Fill"
  input: "decoders/reconstruction_loss/shape_0_1/ones_like/Shape"
  input: "decoders/reconstruction_loss/shape_0_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_1"
  op: "StridedSlice"
  input: "Cast"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_1/stack"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_1/stack_1"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_2"
  op: "StridedSlice"
  input: "Cast"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_2/stack"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_2/stack_1"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 64
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/Equal"
  op: "Equal"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_1"
  input: "decoders/reconstruction_loss/shape_0_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/Cast"
  op: "Cast"
  input: "decoders/reconstruction_loss/shape_0_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0_1/ones_like"
  input: "decoders/reconstruction_loss/shape_0_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0_1/mul"
  input: "decoders/reconstruction_loss/shape_0_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/Cast_1"
  op: "Cast"
  input: "decoders/reconstruction_loss/shape_0_1/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_3"
  op: "StridedSlice"
  input: "Reshape_1"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_3/stack"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_3/stack_1"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 8
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/strided_slice_4"
  op: "StridedSlice"
  input: "decoders/reconstruction_loss/transpose"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack_1"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/strided_slice"
  op: "StridedSlice"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/Shape"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/strided_slice/stack"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/strided_slice/stack_1"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/X_flat/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/X_flat/shape"
  op: "Pack"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/X_flat/shape/0"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/X_flat"
  op: "Reshape"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_3"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/X_flat/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub"
  op: "Sub"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/X_flat"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference"
  op: "Square"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss"
  op: "Sum"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/square_diff_for_each_stimulus/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/square_diff_for_each_stimulus"
  op: "Sum"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/square_diff_for_each_stimulus/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0_1/add/x"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/add_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_0_1/add_1"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0_1/add_1/x"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/square_diff_for_each_stimulus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice"
  op: "StridedSlice"
  input: "Cast"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice/stack"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice/stack_1"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/ones_like"
  op: "Fill"
  input: "decoders/reconstruction_loss/shape_1_1/ones_like/Shape"
  input: "decoders/reconstruction_loss/shape_1_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_1"
  op: "StridedSlice"
  input: "Cast"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_1/stack"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_1/stack_1"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_2"
  op: "StridedSlice"
  input: "Cast"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_2/stack"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_2/stack_1"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 2
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 64
          }
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/Equal"
  op: "Equal"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_1"
  input: "decoders/reconstruction_loss/shape_1_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/Cast"
  op: "Cast"
  input: "decoders/reconstruction_loss/shape_1_1/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1_1/ones_like"
  input: "decoders/reconstruction_loss/shape_1_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1_1/mul"
  input: "decoders/reconstruction_loss/shape_1_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/Cast_1"
  op: "Cast"
  input: "decoders/reconstruction_loss/shape_1_1/mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_3"
  op: "StridedSlice"
  input: "Reshape_1"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_3/stack"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_3/stack_1"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 8
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/strided_slice_4"
  op: "StridedSlice"
  input: "decoders/reconstruction_loss/transpose"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack_1"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/strided_slice"
  op: "StridedSlice"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/Shape"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/strided_slice/stack"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/strided_slice/stack_1"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/X_flat/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/X_flat/shape"
  op: "Pack"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/X_flat/shape/0"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/X_flat"
  op: "Reshape"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_3"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/X_flat/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub"
  op: "Sub"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/X_flat"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference"
  op: "Square"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss"
  op: "Sum"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/square_diff_for_each_stimulus/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/square_diff_for_each_stimulus"
  op: "Sum"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/square_diff_for_each_stimulus/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0_1/add"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/shape_1_1/add_1"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0_1/add_1"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/square_diff_for_each_stimulus"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/reconstruction_loss_sum/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/reconstruction_loss/reconstruction_loss_sum"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/reconstruction_loss_sum"
  op: "ScalarSummary"
  input: "decoders/reconstruction_loss/reconstruction_loss_sum/tags"
  input: "decoders/reconstruction_loss/shape_1_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/Reshape/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/Reshape/shape/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/Reshape/shape"
  op: "Pack"
  input: "decoders/reconstruction_loss/Reshape/shape/0"
  input: "decoders/reconstruction_loss/Reshape/shape/1"
  input: "decoders/reconstruction_loss/Reshape/shape/2"
  input: "decoders/reconstruction_loss/strided_slice"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "decoders/reconstruction_loss/Reshape"
  op: "Reshape"
  input: "decoders/reconstruction_loss/transpose"
  input: "decoders/reconstruction_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice_1"
  op: "StridedSlice"
  input: "decoders/reconstruction_loss/Reshape"
  input: "decoders/reconstruction_loss/strided_slice_1/stack"
  input: "decoders/reconstruction_loss/strided_slice_1/stack_1"
  input: "decoders/reconstruction_loss/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 8
    }
  }
}
node {
  name: "decoders/reconstruction_loss/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/ExpandDims"
  op: "ExpandDims"
  input: "decoders/reconstruction_loss/strided_slice_1"
  input: "decoders/reconstruction_loss/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/sub"
  op: "Sub"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/Rank"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims"
  op: "ExpandDims"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/sub"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/ones"
  op: "Fill"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims_1"
  op: "ExpandDims"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims_1/input"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb/concat"
  op: "ConcatV2"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/ones"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/ExpandDims_1"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb"
  op: "Tile"
  input: "decoders/reconstruction_loss/ExpandDims"
  input: "decoders/reconstruction_loss/grayscale_to_rgb/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\362B\000\000GC\000\000\246B"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/grayscale_to_rgb"
  input: "decoders/reconstruction_loss/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/strided_slice_2"
  op: "StridedSlice"
  input: "decoders/reconstruction_loss/Reshape"
  input: "decoders/reconstruction_loss/strided_slice_2/stack"
  input: "decoders/reconstruction_loss/strided_slice_2/stack_1"
  input: "decoders/reconstruction_loss/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 8
    }
  }
}
node {
  name: "decoders/reconstruction_loss/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/ExpandDims_1"
  op: "ExpandDims"
  input: "decoders/reconstruction_loss/strided_slice_2"
  input: "decoders/reconstruction_loss/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/sub"
  op: "Sub"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/Rank"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims"
  op: "ExpandDims"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/sub"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/ones/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/ones"
  op: "Fill"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims_1/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims_1"
  op: "ExpandDims"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims_1/input"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1/concat"
  op: "ConcatV2"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/ones"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/ExpandDims_1"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/grayscale_to_rgb_1"
  op: "Tile"
  input: "decoders/reconstruction_loss/ExpandDims_1"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\\C\000\000\230B\000\000\214B"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/grayscale_to_rgb_1"
  input: "decoders/reconstruction_loss/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/add"
  op: "Add"
  input: "decoders/reconstruction_loss/mul"
  input: "decoders/reconstruction_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/decoder_output/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "decoders/reconstruction_loss/decoder_output"
      }
    }
  }
}
node {
  name: "decoders/reconstruction_loss/decoder_output"
  op: "ImageSummary"
  input: "decoders/reconstruction_loss/decoder_output/tag"
  input: "decoders/reconstruction_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 6
    }
  }
}
node {
  name: "total_loss/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3.3329999446868896
      }
    }
  }
}
node {
  name: "total_loss/mul"
  op: "Mul"
  input: "total_loss/mul/x"
  input: "2nd_caps/margin_loss/margin_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "total_loss/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "total_loss/mul_1"
  op: "Mul"
  input: "total_loss/mul_1/x"
  input: "decoders/reconstruction_loss/shape_1_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "total_loss/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "total_loss/mul_2"
  op: "Mul"
  input: "total_loss/mul_2/x"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "total_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "total_loss/loss"
  op: "AddN"
  input: "total_loss/mul"
  input: "total_loss/mul_1"
  input: "total_loss/Const"
  input: "total_loss/mul_2"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "total_loss/total_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "total_loss/total_loss"
      }
    }
  }
}
node {
  name: "total_loss/total_loss"
  op: "ScalarSummary"
  input: "total_loss/total_loss/tags"
  input: "total_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "accuracy/y_sorted/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "accuracy/y_sorted/Neg"
  op: "Neg"
  input: "Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "accuracy/y_sorted/Shape"
  op: "Shape"
  input: "accuracy/y_sorted/Neg"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "accuracy/y_sorted/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "accuracy/y_sorted/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy/y_sorted/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/y_sorted/strided_slice"
  op: "StridedSlice"
  input: "accuracy/y_sorted/Shape"
  input: "accuracy/y_sorted/strided_slice/stack"
  input: "accuracy/y_sorted/strided_slice/stack_1"
  input: "accuracy/y_sorted/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "accuracy/y_sorted/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "accuracy/y_sorted/TopKV2"
  op: "TopKV2"
  input: "accuracy/y_sorted/Neg"
  input: "accuracy/y_sorted/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "accuracy/y_sorted/Neg_1"
  op: "Neg"
  input: "accuracy/y_sorted/TopKV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/Neg"
  op: "Neg"
  input: "2nd_caps/net_prediction/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/strided_slice"
  op: "StridedSlice"
  input: "accuracy/y_pred_sorted/Shape"
  input: "accuracy/y_pred_sorted/strided_slice/stack"
  input: "accuracy/y_pred_sorted/strided_slice/stack_1"
  input: "accuracy/y_pred_sorted/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/TopKV2"
  op: "TopKV2"
  input: "accuracy/y_pred_sorted/Neg"
  input: "accuracy/y_pred_sorted/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "sorted"
    value {
      b: true
    }
  }
}
node {
  name: "accuracy/y_pred_sorted/Neg_1"
  op: "Neg"
  input: "accuracy/y_pred_sorted/TopKV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "accuracy/correct"
  op: "Equal"
  input: "accuracy/y_sorted/Neg_1"
  input: "accuracy/y_pred_sorted/Neg_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "accuracy/Cast"
  op: "Cast"
  input: "accuracy/correct"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "accuracy/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "accuracy/accuracy"
  op: "Mean"
  input: "accuracy/Cast"
  input: "accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/accuracy_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy/accuracy_1"
      }
    }
  }
}
node {
  name: "accuracy/accuracy_1"
  op: "ScalarSummary"
  input: "accuracy/accuracy_1/tags"
  input: "accuracy/accuracy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "input"
  input: "0_early_conv_layers/1st_conv_layer"
  input: "0_early_conv_layers/2nd_conv_layer"
  input: "1st_caps/Primary_capsule_norms_1"
  input: "2nd_caps/Output_capsule_norms"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/training_vernier_offset_xentropy"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden1_bn"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden2_bn"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden1_bn"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden2_bn"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output_1"
  input: "decoders/reconstruction_loss/reconstruction_loss_sum"
  input: "decoders/reconstruction_loss/decoder_output"
  input: "total_loss/total_loss"
  input: "accuracy/accuracy_1"
  attr {
    key: "N"
    value {
      i: 17
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Merge_1/MergeSummary"
  op: "MergeSummary"
  input: "input"
  input: "0_early_conv_layers/1st_conv_layer"
  input: "0_early_conv_layers/2nd_conv_layer"
  input: "1st_caps/Primary_capsule_norms_1"
  input: "2nd_caps/Output_capsule_norms"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/training_vernier_offset_xentropy"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden1_bn"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden2_bn"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden1_bn"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden2_bn"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output_1"
  input: "decoders/reconstruction_loss/reconstruction_loss_sum"
  input: "decoders/reconstruction_loss/decoder_output"
  input: "total_loss/total_loss"
  input: "accuracy/accuracy_1"
  attr {
    key: "N"
    value {
      i: 17
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/StackPushV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Fill"
}
node {
  name: "gradients/total_loss/loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss/loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss/loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/loss_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss/loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/loss_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "gradients/Fill"
  input: "^gradients/total_loss/loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss/loss_grad/tuple/control_dependency"
  input: "2nd_caps/margin_loss/margin_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss/loss_grad/tuple/control_dependency"
  input: "total_loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/total_loss/mul_grad/Mul"
  input: "^gradients/total_loss/mul_grad/Mul_1"
}
node {
  name: "gradients/total_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/total_loss/mul_grad/Mul"
  input: "^gradients/total_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/total_loss/mul_grad/Mul_1"
  input: "^gradients/total_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss/loss_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_1_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss/loss_grad/tuple/control_dependency_1"
  input: "total_loss/mul_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/total_loss/mul_1_grad/Mul"
  input: "^gradients/total_loss/mul_1_grad/Mul_1"
}
node {
  name: "gradients/total_loss/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/total_loss/mul_1_grad/Mul"
  input: "^gradients/total_loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_1_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/total_loss/mul_1_grad/Mul_1"
  input: "^gradients/total_loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/total_loss/loss_grad/tuple/control_dependency_3"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/total_loss/loss_grad/tuple/control_dependency_3"
  input: "total_loss/mul_2/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/total_loss/mul_2_grad/Mul"
  input: "^gradients/total_loss/mul_2_grad/Mul_1"
}
node {
  name: "gradients/total_loss/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/total_loss/mul_2_grad/Mul"
  input: "^gradients/total_loss/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/total_loss/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/total_loss/mul_2_grad/Mul_1"
  input: "^gradients/total_loss/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/margin_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/margin_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/total_loss/mul_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/margin_loss/margin_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/margin_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/margin_loss_grad/Tile"
  op: "Tile"
  input: "gradients/2nd_caps/margin_loss/margin_loss_grad/Reshape"
  input: "gradients/2nd_caps/margin_loss/margin_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/margin_loss_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/margin_loss_grad/truediv"
  op: "RealDiv"
  input: "gradients/2nd_caps/margin_loss/margin_loss_grad/Tile"
  input: "gradients/2nd_caps/margin_loss/margin_loss_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/total_loss/mul_1_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/total_loss/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/total_loss/mul_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Greater"
  input: "gradients/total_loss/mul_2_grad/tuple/control_dependency_1"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Greater"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "gradients/total_loss/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/add"
  op: "Add"
  input: "2nd_caps/margin_loss/Sum_1/reduction_indices"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/mod"
  op: "FloorMod"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/add"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/range"
  op: "Range"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/range/start"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Size"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Fill"
  op: "Fill"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Shape_1"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/range"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/mod"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/DynamicStitch"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/margin_loss_grad/truediv"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Reshape"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/control_dependency"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/control_dependency"
  input: "^gradients/decoders/reconstruction_loss/shape_0_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/control_dependency"
  input: "^gradients/decoders/reconstruction_loss/shape_0_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/total_loss/mul_1_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/add_grad/tuple/control_dependency_1"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Shape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Sum"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Neg"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/mul"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/L_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/margin_loss/Sum_1_grad/Tile"
}
node {
  name: "gradients/2nd_caps/margin_loss/L_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Tile"
  input: "^gradients/2nd_caps/margin_loss/L_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Tile"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/L_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/Sum_1_grad/Tile"
  input: "^gradients/2nd_caps/margin_loss/L_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Sum_1_grad/Tile"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/add_grad/tuple/control_dependency_1"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Const"
  op: "Const"
  input: "^gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/reconstruction_loss_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_grad/Mul"
  op: "Mul"
  input: "gradients/2nd_caps/margin_loss/L_grad/tuple/control_dependency"
  input: "2nd_caps/margin_loss/present_error"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/margin_loss/L_grad/tuple/control_dependency"
  input: "2nd_caps/margin_loss/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/margin_loss/mul_grad/Mul"
  input: "^gradients/2nd_caps/margin_loss/mul_grad/Mul_1"
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/mul_grad/Mul"
  input: "^gradients/2nd_caps/margin_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/mul_grad/Mul_1"
  input: "^gradients/2nd_caps/margin_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/2nd_caps/margin_loss/L_grad/tuple/control_dependency_1"
  input: "2nd_caps/margin_loss/absent_error"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/margin_loss/L_grad/tuple/control_dependency_1"
  input: "2nd_caps/margin_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/margin_loss/mul_2_grad/Mul"
  input: "^gradients/2nd_caps/margin_loss/mul_2_grad/Mul_1"
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/mul_2_grad/Mul"
  input: "^gradients/2nd_caps/margin_loss/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/mul_2_grad/Mul_1"
  input: "^gradients/2nd_caps/margin_loss/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Const"
  op: "Const"
  input: "^gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Mul"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/reconstruction_loss_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/Neg"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/squared_difference_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/present_error_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/present_error_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/mul_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/margin_loss/present_error_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/absent_error_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/absent_error_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/mul_2_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/margin_loss/absent_error_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/Neg"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/squared_difference_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\224\021\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/strided_slice_4_grad/Shape"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack_1"
  input: "decoders/reconstruction_loss/shape_1_1/strided_slice_4/stack_2"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/reconstruction_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/present_error_raw_grad/Const"
  op: "Const"
  input: "^gradients/2nd_caps/margin_loss/present_error_grad/Reshape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/present_error_raw_grad/Mul"
  op: "Mul"
  input: "2nd_caps/margin_loss/Maximum"
  input: "gradients/2nd_caps/margin_loss/present_error_raw_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/present_error_raw_grad/Mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/margin_loss/present_error_grad/Reshape"
  input: "gradients/2nd_caps/margin_loss/present_error_raw_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/absent_error_raw_grad/Const"
  op: "Const"
  input: "^gradients/2nd_caps/margin_loss/absent_error_grad/Reshape"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/absent_error_raw_grad/Mul"
  op: "Mul"
  input: "2nd_caps/margin_loss/Maximum_1"
  input: "gradients/2nd_caps/margin_loss/absent_error_raw_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/absent_error_raw_grad/Mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/margin_loss/absent_error_grad/Reshape"
  input: "gradients/2nd_caps/margin_loss/absent_error_raw_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/strided_slice_4_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\224\021\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0_1/strided_slice_4_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/strided_slice_4_grad/Shape"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack_1"
  input: "decoders/reconstruction_loss/shape_0_1/strided_slice_4/stack_2"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/reconstruction_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 4
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/zeros"
  op: "Fill"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Shape_2"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "2nd_caps/margin_loss/Maximum/x"
  input: "2nd_caps/margin_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Select"
  op: "Select"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/GreaterEqual"
  input: "gradients/2nd_caps/margin_loss/present_error_raw_grad/Mul_1"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Select_1"
  op: "Select"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/GreaterEqual"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/zeros"
  input: "gradients/2nd_caps/margin_loss/present_error_raw_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Select"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Select_1"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Sum_1"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/margin_loss/Maximum_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/Maximum_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Maximum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/Reshape_1"
  input: "^gradients/2nd_caps/margin_loss/Maximum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Maximum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/zeros"
  op: "Fill"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Shape_2"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "2nd_caps/margin_loss/Maximum_1/x"
  input: "2nd_caps/margin_loss/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Select"
  op: "Select"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/GreaterEqual"
  input: "gradients/2nd_caps/margin_loss/absent_error_raw_grad/Mul_1"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Select_1"
  op: "Select"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/GreaterEqual"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/zeros"
  input: "gradients/2nd_caps/margin_loss/absent_error_raw_grad/Mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Select"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Select_1"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Sum_1"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/margin_loss/Maximum_1_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/Maximum_1_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/Maximum_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Maximum_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/Maximum_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/Reshape_1"
  input: "^gradients/2nd_caps/margin_loss/Maximum_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/Maximum_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_1_1/strided_slice_4_grad/StridedSliceGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0_1/strided_slice_4_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1_1/strided_slice_4_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "decoders/reconstruction_loss/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/AddN"
  input: "gradients/decoders/reconstruction_loss/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  op: "Mul"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/mul_1"
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/margin_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Sum"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/margin_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Neg"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/margin_loss/sub_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/sub_grad/Reshape_1"
  input: "^gradients/2nd_caps/margin_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Sum"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/Maximum_1_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/Neg"
  op: "Neg"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Neg"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/margin_loss/sub_1_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/sub_1_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/Reshape_1"
  input: "^gradients/2nd_caps/margin_loss/sub_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/sub_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/stack_grad/unstack"
  op: "Unpack"
  input: "gradients/decoders/reconstruction_loss/transpose_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/stack_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/stack_grad/unstack"
}
node {
  name: "gradients/decoders/reconstruction_loss/stack_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/stack_grad/unstack"
  input: "^gradients/decoders/reconstruction_loss/stack_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/stack_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/stack_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/stack_grad/unstack:1"
  input: "^gradients/decoders/reconstruction_loss/stack_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/stack_grad/unstack"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/2nd_caps/margin_loss/sub_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/margin_loss/sub_1_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "2nd_caps/margin_loss/caps2_output_norm/Sqrt"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid"
  input: "gradients/decoders/reconstruction_loss/stack_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid"
  input: "gradients/decoders/reconstruction_loss/stack_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sqrt_grad/SqrtGrad"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Sum"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sqrt_grad/SqrtGrad"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Sum_1"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Reshape"
  input: "^gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Reshape_1"
  input: "^gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu_grad/ReluGrad"
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu_grad/ReluGrad"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/Relu_grad/ReluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/add"
  op: "Add"
  input: "2nd_caps/margin_loss/caps2_output_norm/Sum/reduction_indices"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/add"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/range"
  op: "Range"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/range/start"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Size"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape_1"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/range"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/mod"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/DynamicStitch"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/add_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Reshape"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency"
  input: "shape_0/output_decoder_output/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden2_activation"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency"
  input: "shape_1/output_decoder_output/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden2_activation"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/tuple/control_dependency"
  input: "offset_logits/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoders/vernier_offset_loss/strided_slice"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/MatMul"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/MatMul"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/MatMul_1"
  input: "^gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Square_grad/Const"
  op: "Const"
  input: "^gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Square_grad/Mul"
  op: "Mul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/margin_loss/caps2_output_norm/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Sum_grad/Tile"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden2_activation_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/control_dependency"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden2_activation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden2_activation_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/control_dependency"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden2_activation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/strided_slice_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/vernier_offset_loss/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/decoders/vernier_offset_loss/strided_slice_grad/Shape"
  input: "decoders/vernier_offset_loss/strided_slice/stack"
  input: "decoders/vernier_offset_loss/strided_slice/stack_1"
  input: "decoders/vernier_offset_loss/strided_slice/stack_2"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/tuple/control_dependency"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 9
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 9
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 22
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden2_activation_grad/EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden2_activation_grad/EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden2_activation_grad/EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden2_activation_grad/EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "shape_0/output_decoderhidden2_bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_2"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "shape_1/output_decoderhidden2_bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_3"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance/reduction_indices"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/add"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range/start"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Size"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/mod"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance/reduction_indices"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/add"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range/start"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Size"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/range"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/mod"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/StopGradient"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/StopGradient"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean/reduction_indices"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/add"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range/start"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Size"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/mod"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean/reduction_indices"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/add"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range/start"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Size"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/range"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/mod"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/Squeeze_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AddN_4"
  input: "shape_0/output_decoderhidden2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden1_activation"
  input: "gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AddN_5"
  input: "shape_1/output_decoderhidden2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden1_activation"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden1_activation_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/control_dependency"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden1_activation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden1_activation_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/control_dependency"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden1_activation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden1_activation_grad/EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/hidden1_activation_grad/EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden1_activation_grad/EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/hidden1_activation_grad/EluGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Mul_1"
  op: "Mul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/Neg"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "shape_0/output_decoderhidden1_bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_7"
  input: "shape_1/output_decoderhidden1_bn/gamma/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/AddN_7"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/add_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance/reduction_indices"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/add"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range/start"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Size"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/mod"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance/reduction_indices"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/mod"
  op: "FloorMod"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/add"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range"
  op: "Range"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range/start"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Size"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Fill"
  op: "Fill"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/range"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/mod"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_1_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/truediv"
  op: "RealDiv"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/StopGradient"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/truediv"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/scalar"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/sub"
  op: "Sub"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/StopGradient"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/variance_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Neg"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean/reduction_indices"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/add"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range/start"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Size"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/mod"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/add"
  op: "Add"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean/reduction_indices"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/mod"
  op: "FloorMod"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/add"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range"
  op: "Range"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range/start"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Size"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Fill"
  op: "Fill"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/range"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/mod"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Maximum"
  op: "Maximum"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/DynamicStitch"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/Squeeze_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Tile"
  op: "Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 64.0
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Tile"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AddN_8"
  input: "shape_0/output_decoderhidden1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/SquaredDifference_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/moments/mean_grad/truediv"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/AddN_9"
  input: "shape_1/output_decoderhidden1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input"
  input: "gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input_grad/Reshape"
  input: "decoders/reconstruction_loss/shape_0/create_masked_decoder_input/reconstruction_mask_reshaped"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Mul"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Mul_1"
  op: "Mul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/decoder_input_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Shape"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Mul"
  op: "Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input_grad/Reshape"
  input: "decoders/reconstruction_loss/shape_1/create_masked_decoder_input/reconstruction_mask_reshaped"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Sum"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Mul"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Reshape"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Mul_1"
  op: "Mul"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/decoder_input_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Sum_1"
  op: "Sum"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Mul_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Sum_1"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Reshape_1"
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Reshape"
  input: "^gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Reshape_1"
  input: "^gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros"
  op: "Fill"
  input: "gradients/zeros/shape_as_tensor"
  input: "gradients/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/zeros_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/zeros_1"
  op: "Fill"
  input: "gradients/zeros_1/shape_as_tensor"
  input: "gradients/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/2nd_caps/margin_loss/caps2_output_norm/Square_grad/Mul_1"
  input: "gradients/decoders/vernier_offset_loss/strided_slice_grad/StridedSliceGrad"
  input: "gradients/decoders/reconstruction_loss/shape_0/create_masked_decoder_input/caps2_output_masked_grad/tuple/control_dependency"
  input: "gradients/decoders/reconstruction_loss/shape_1/create_masked_decoder_input/caps2_output_masked_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/margin_loss/caps2_output_norm/Square_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_1_grad/b_exit"
  input: "NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_grad/b_switch"
  op: "Merge"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_grad/b_exit"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Exit_2_grad/b_exit"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/Switch"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/Switch"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/Switch:1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/Switch"
  op: "Switch"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/Switch"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/Switch"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/Switch:1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/Switch"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/Switch"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/Switch:1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_grad/Exit"
  op: "Exit"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_grad/Exit"
  input: "2nd_caps/primary_to_first_fc/caps1_output_tiled"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/MatMul_1"
  op: "BatchMatMul"
  input: "2nd_caps/primary_to_first_fc/W_tiled"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Enter_grad/Exit"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: true
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/MatMul"
  input: "^gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/MatMul_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/MatMul"
  input: "^gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/MatMul_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/control_dependency_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_2_grad/tuple/control_dependency_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\010\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/stack"
  op: "Pack"
  input: "2nd_caps/primary_to_first_fc/W_tiled/multiples"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Rank"
  op: "Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/sub"
  op: "Sub"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Range"
  op: "Range"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Range/start"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/sub_1"
  op: "Sub"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/sub"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose"
  op: "Transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/stack"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/range"
  op: "Range"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/range/start"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Size"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Reshape_1"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/stack"
  op: "Pack"
  input: "2nd_caps/primary_to_first_fc/caps1_output_tiled/multiples"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Rank"
  op: "Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/sub"
  op: "Sub"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Range"
  op: "Range"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Range/start"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/sub_1"
  op: "Sub"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/sub"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose"
  op: "Transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/stack"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/range"
  op: "Range"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/range/start"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Size"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/caps2_predicted_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Reshape_1"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul"
  op: "BatchMatMul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/b_sync"
  op: "ControlTrigger"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/StackPopV2"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/StackPopV2"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1"
  op: "BatchMatMul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "adj_x"
    value {
      b: false
    }
  }
  attr {
    key: "adj_y"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Identity"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tile_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tile_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tiled_grad/Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tile_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/stack"
  op: "Pack"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/stack/Const"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Shape"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/stack/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Rank"
  op: "Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/sub/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/sub"
  op: "Sub"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Range/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Range/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Range"
  op: "Range"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Range/start"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Rank"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/sub_1"
  op: "Sub"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/sub"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/Range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose"
  op: "Transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/stack"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Reshape/shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Size"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/range/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/range/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/range"
  op: "Range"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/range/start"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Size"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Reshape_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_expanded_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/caps1_output_expanded_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_tile_grad/Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_expanded_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_1_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output_tiled_grad/Sum"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_11"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/StackPopV2"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Mul_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Sum_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Reshape_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Shape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Mul"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_expanded_grad/Reshape"
  input: "1st_caps/primary_capsules/caps1_output/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Sum"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Mul"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Mul_1"
  op: "Mul"
  input: "1st_caps/primary_capsules/caps1_output/truediv"
  input: "gradients/2nd_caps/primary_to_first_fc/caps1_output_expanded_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Mul_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Sum_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Reshape_1"
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Reshape_1"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg"
  op: "Neg"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Neg"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/mul"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Sum_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sqrt"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sqrt"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sqrt"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg"
  op: "Neg"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/mul"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/mul_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Sum_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Shape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/control_dependency"
  input: "1st_caps/primary_capsules/caps1_output/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Sum"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/RealDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Neg"
  op: "Neg"
  input: "1st_caps/primary_capsules/caps1_output/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Neg"
  input: "1st_caps/primary_capsules/caps1_output/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/RealDiv_1"
  input: "1st_caps/primary_capsules/caps1_output/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/mul"
  op: "Mul"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/control_dependency"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Sum_1"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/mul"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Sum_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape_1"
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape_1"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Shape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/control_dependency_1"
  input: "1st_caps/primary_capsules/caps1_output/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Sum"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/RealDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Neg"
  op: "Neg"
  input: "1st_caps/primary_capsules/caps1_raw"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Neg"
  input: "1st_caps/primary_capsules/caps1_output/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/RealDiv_1"
  input: "1st_caps/primary_capsules/caps1_output/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/mul"
  op: "Mul"
  input: "gradients/1st_caps/primary_capsules/caps1_output/mul_grad/tuple/control_dependency_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/mul"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Sum_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape_1"
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape_1"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Sum_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Reshape_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/RealDiv/StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Shape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/tuple/control_dependency_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/tuple/control_dependency_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Sum_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Reshape_1"
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Reshape_1"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sqrt_grad/SqrtGrad"
  op: "SqrtGrad"
  input: "1st_caps/primary_capsules/caps1_output/Sqrt"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sqrt_grad/SqrtGrad"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sqrt_grad/SqrtGrad"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Sum_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Reshape_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Shape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Sum"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sqrt_grad/SqrtGrad"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sqrt_grad/SqrtGrad"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Sum_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/add_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/add_grad/Reshape_1"
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Reshape"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/Reshape_1"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_1_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/add_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\001\000\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Size"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/add"
  op: "Add"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/add/Const"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/add/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -2
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/add"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/range/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/range/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/range"
  op: "Range"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/range/start"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Size"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Fill/value"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/range"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/mod"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Maximum/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/DynamicStitch"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_12"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/tuple/control_dependency"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_1_grad/tuple/control_dependency_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/add_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/add"
  op: "Add"
  input: "1st_caps/primary_capsules/caps1_output/Sum/reduction_indices"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/mod"
  op: "FloorMod"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/add"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/range"
  op: "Range"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/range/start"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Size"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape_1"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/range"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/mod"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/DynamicStitch"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_13"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Reshape"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Square_grad/Const"
  op: "Const"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Square_grad/Mul"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Neg/StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Sum_grad/Tile"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Square_grad/Const"
  op: "Const"
  input: "^gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Square_grad/Mul"
  op: "Mul"
  input: "1st_caps/primary_capsules/caps1_raw"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Square_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_output/Square_grad/Mul_1"
  op: "Mul"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Sum_grad/Tile"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Square_grad/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/Square_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/caps2_rba_output/truediv_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Size"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 5
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/add"
  op: "Add"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/add/Const"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/add/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/mod"
  op: "FloorMod"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/add"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/range/start"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/range/delta"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/range"
  op: "Range"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/range/start"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Size"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Fill/value"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Fill"
  op: "Fill"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/range"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/mod"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Maximum/y"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Maximum"
  op: "Maximum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/DynamicStitch"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/floordiv"
  op: "FloorDiv"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_14"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Tile"
  op: "Tile"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/tuple/control_dependency"
  input: "gradients/1st_caps/primary_capsules/caps1_output/Square_grad/Mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/caps1_output/truediv_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_raw_grad/Shape"
  op: "Shape"
  input: "1st_caps/primary_capsules/conv_for_caps/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/caps1_raw_grad/Reshape"
  op: "Reshape"
  input: "gradients/AddN_15"
  input: "gradients/1st_caps/primary_capsules/caps1_raw_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 6
          }
          dim {
            size: 20
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\010\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\010\000\000\000\020\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Shape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Tile"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/MatMul_1/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Sum_1"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Mul_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Sum_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Reshape_1"
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Reshape"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Reshape_1"
  input: "^gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/1st_caps/primary_capsules/caps1_raw_grad/Reshape"
  input: "1st_caps/primary_capsules/conv_for_caps/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 6
          }
          dim {
            size: 20
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/transpose"
  op: "Transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Merge_grad/tuple/control_dependency_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/agreement_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/weighted_predictions_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/1st_caps/primary_capsules/conv_for_caps/Elu_grad/EluGrad"
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/Elu_grad/EluGrad"
  input: "^gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/conv_for_caps/Elu_grad/EluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 6
          }
          dim {
            size: 20
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\360\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/routing_weights_grad/transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "0_early_conv_layers/conv2/Elu"
  input: "conv_for_caps/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/ShapeN"
  input: "conv_for_caps/kernel/read"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 17
          }
          dim {
            size: 44
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "0_early_conv_layers/conv2/Elu"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/ShapeN:1"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 17
          }
          dim {
            size: 44
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_1_grad/Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/Sum"
  op: "Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/Sum"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/sub"
  op: "Sub"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_1_grad/Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul_1"
  op: "Mul"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/sub"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 61440
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/tuple/control_dependency"
  input: "0_early_conv_layers/conv2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 17
          }
          dim {
            size: 44
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "@\000\000\000\300\003\000\000\001\000\000\000\001\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Softmax_grad/mul_1"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/0_early_conv_layers/conv2/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/0_early_conv_layers/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/0_early_conv_layers/conv2/Elu_grad/EluGrad"
}
node {
  name: "gradients/0_early_conv_layers/conv2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/0_early_conv_layers/conv2/Elu_grad/EluGrad"
  input: "^gradients/0_early_conv_layers/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/0_early_conv_layers/conv2/Elu_grad/EluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 17
          }
          dim {
            size: 44
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/0_early_conv_layers/conv2/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/0_early_conv_layers/conv2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/0_early_conv_layers/conv2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/f_acc"
  op: "StackV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/StackPushV2"
  op: "StackPushV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/Enter"
  input: "2nd_caps/primary_to_first_fc/routing_by_agreement/while/concat"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/StackPopV2"
  op: "StackPopV2"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Reshape_grad/Reshape"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "0_early_conv_layers/conv1/Elu"
  input: "conv2/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/0_early_conv_layers/conv2/Conv2D_grad/ShapeN"
  input: "conv2/kernel/read"
  input: "gradients/0_early_conv_layers/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
          dim {
            size: 94
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "0_early_conv_layers/conv1/Elu"
  input: "gradients/0_early_conv_layers/conv2/Conv2D_grad/ShapeN:1"
  input: "gradients/0_early_conv_layers/conv2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/0_early_conv_layers/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/0_early_conv_layers/conv2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/0_early_conv_layers/conv2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/0_early_conv_layers/conv2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/0_early_conv_layers/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/0_early_conv_layers/conv2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
          dim {
            size: 94
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/0_early_conv_layers/conv2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/0_early_conv_layers/conv2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/0_early_conv_layers/conv2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/raw_weights_round_new_grad/tuple/control_dependency"
  input: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "gradients/0_early_conv_layers/conv2/Conv2D_grad/tuple/control_dependency"
  input: "0_early_conv_layers/conv1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
          dim {
            size: 94
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/2nd_caps/primary_to_first_fc/routing_by_agreement/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/0_early_conv_layers/conv1/Elu_grad/EluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/0_early_conv_layers/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/0_early_conv_layers/conv1/Elu_grad/EluGrad"
}
node {
  name: "gradients/0_early_conv_layers/conv1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/0_early_conv_layers/conv1/Elu_grad/EluGrad"
  input: "^gradients/0_early_conv_layers/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/0_early_conv_layers/conv1/Elu_grad/EluGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 39
          }
          dim {
            size: 94
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/0_early_conv_layers/conv1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/0_early_conv_layers/conv1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/0_early_conv_layers/conv1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "conv1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/0_early_conv_layers/conv1/Conv2D_grad/ShapeN"
  input: "conv1/kernel/read"
  input: "gradients/0_early_conv_layers/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "gradients/0_early_conv_layers/conv1/Conv2D_grad/ShapeN:1"
  input: "gradients/0_early_conv_layers/conv1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/0_early_conv_layers/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/0_early_conv_layers/conv1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/0_early_conv_layers/conv1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/0_early_conv_layers/conv1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/0_early_conv_layers/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/0_early_conv_layers/conv1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 45
          }
          dim {
            size: 100
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/0_early_conv_layers/conv1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/0_early_conv_layers/conv1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/0_early_conv_layers/conv1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/0_early_conv_layers/conv1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "NextIteration"
  op: "NextIteration"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 1
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/kernel/Adam/Assign"
  op: "Assign"
  input: "conv1/kernel/Adam"
  input: "conv1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/kernel/Adam/read"
  op: "Identity"
  input: "conv1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000\001\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv1/kernel/Adam_1"
  input: "conv1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/kernel/Adam_1/read"
  op: "Identity"
  input: "conv1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bias/Adam/Assign"
  op: "Assign"
  input: "conv1/bias/Adam"
  input: "conv1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bias/Adam/read"
  op: "Identity"
  input: "conv1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bias/Adam_1/Assign"
  op: "Assign"
  input: "conv1/bias/Adam_1"
  input: "conv1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bias/Adam_1/read"
  op: "Identity"
  input: "conv1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/kernel/Adam/Assign"
  op: "Assign"
  input: "conv2/kernel/Adam"
  input: "conv2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/kernel/Adam/read"
  op: "Identity"
  input: "conv2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\007\000\000\000\007\000\000\000 \000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 7
        }
        dim {
          size: 7
        }
        dim {
          size: 32
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv2/kernel/Adam_1"
  input: "conv2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/kernel/Adam_1/read"
  op: "Identity"
  input: "conv2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bias/Adam/Assign"
  op: "Assign"
  input: "conv2/bias/Adam"
  input: "conv2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bias/Adam/read"
  op: "Identity"
  input: "conv2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bias/Adam_1/Assign"
  op: "Assign"
  input: "conv2/bias/Adam_1"
  input: "conv2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bias/Adam_1/read"
  op: "Identity"
  input: "conv2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "conv_for_caps/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "conv_for_caps/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam/Assign"
  op: "Assign"
  input: "conv_for_caps/kernel/Adam"
  input: "conv_for_caps/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam/read"
  op: "Identity"
  input: "conv_for_caps/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\006\000\000\000\006\000\000\000 \000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "conv_for_caps/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "conv_for_caps/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
        dim {
          size: 6
        }
        dim {
          size: 32
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam_1/Assign"
  op: "Assign"
  input: "conv_for_caps/kernel/Adam_1"
  input: "conv_for_caps/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_for_caps/kernel/Adam_1/read"
  op: "Identity"
  input: "conv_for_caps/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_for_caps/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_for_caps/bias/Adam/Assign"
  op: "Assign"
  input: "conv_for_caps/bias/Adam"
  input: "conv_for_caps/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_for_caps/bias/Adam/read"
  op: "Identity"
  input: "conv_for_caps/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "conv_for_caps/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv_for_caps/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv_for_caps/bias/Adam_1/Assign"
  op: "Assign"
  input: "conv_for_caps/bias/Adam_1"
  input: "conv_for_caps/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv_for_caps/bias/Adam_1/read"
  op: "Identity"
  input: "conv_for_caps/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\010\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam/Initializer/zeros"
  op: "Fill"
  input: "2nd_caps/primary_to_first_fc/W/Adam/Initializer/zeros/shape_as_tensor"
  input: "2nd_caps/primary_to_first_fc/W/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam/Assign"
  op: "Assign"
  input: "2nd_caps/primary_to_first_fc/W/Adam"
  input: "2nd_caps/primary_to_first_fc/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam/read"
  op: "Identity"
  input: "2nd_caps/primary_to_first_fc/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\300\003\000\000\010\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 8
        }
        dim {
          size: 16
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam_1/Assign"
  op: "Assign"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "2nd_caps/primary_to_first_fc/W/Adam_1/read"
  op: "Identity"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "offset_logits/kernel/Adam/Assign"
  op: "Assign"
  input: "offset_logits/kernel/Adam"
  input: "offset_logits/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "offset_logits/kernel/Adam/read"
  op: "Identity"
  input: "offset_logits/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "offset_logits/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "offset_logits/kernel/Adam_1/Assign"
  op: "Assign"
  input: "offset_logits/kernel/Adam_1"
  input: "offset_logits/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "offset_logits/kernel/Adam_1/read"
  op: "Identity"
  input: "offset_logits/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "offset_logits/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "offset_logits/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "offset_logits/bias/Adam/Assign"
  op: "Assign"
  input: "offset_logits/bias/Adam"
  input: "offset_logits/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "offset_logits/bias/Adam/read"
  op: "Identity"
  input: "offset_logits/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "offset_logits/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "offset_logits/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "offset_logits/bias/Adam_1/Assign"
  op: "Assign"
  input: "offset_logits/bias/Adam_1"
  input: "offset_logits/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "offset_logits/bias/Adam_1/read"
  op: "Identity"
  input: "offset_logits/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1/kernel/Adam"
  input: "shape_0/output_decoderhidden1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1/kernel/Adam_1/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Adam/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Adam/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Adam_1/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/gamma/Adam_1/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Adam/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Adam/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Adam_1/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden1_bn/beta/Adam_1/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2/kernel/Adam"
  input: "shape_0/output_decoderhidden2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2/kernel/Adam_1/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam_1/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/gamma/Adam_1/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam_1/Assign"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoderhidden2_bn/beta/Adam_1/read"
  op: "Identity"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoder_output/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoder_output/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam/Assign"
  op: "Assign"
  input: "shape_0/output_decoder_output/kernel/Adam"
  input: "shape_0/output_decoder_output/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam/read"
  op: "Identity"
  input: "shape_0/output_decoder_output/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoder_output/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoder_output/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam_1/Assign"
  op: "Assign"
  input: "shape_0/output_decoder_output/kernel/Adam_1"
  input: "shape_0/output_decoder_output/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoder_output/kernel/Adam_1/read"
  op: "Identity"
  input: "shape_0/output_decoder_output/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4500
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoder_output/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoder_output/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam/Assign"
  op: "Assign"
  input: "shape_0/output_decoder_output/bias/Adam"
  input: "shape_0/output_decoder_output/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam/read"
  op: "Identity"
  input: "shape_0/output_decoder_output/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4500
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_0/output_decoder_output/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_0/output_decoder_output/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam_1/Assign"
  op: "Assign"
  input: "shape_0/output_decoder_output/bias/Adam_1"
  input: "shape_0/output_decoder_output/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_0/output_decoder_output/bias/Adam_1/read"
  op: "Identity"
  input: "shape_0/output_decoder_output/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1/kernel/Adam"
  input: "shape_1/output_decoderhidden1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1/kernel/Adam_1/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Adam/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Adam/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Adam_1/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/gamma/Adam_1/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Adam/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Adam/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Adam_1/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden1_bn/beta/Adam_1/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2/kernel/Adam"
  input: "shape_1/output_decoderhidden2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2/kernel/Adam_1/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam_1/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/gamma/Adam_1/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam_1/Assign"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoderhidden2_bn/beta/Adam_1/read"
  op: "Identity"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoder_output/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoder_output/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam/Assign"
  op: "Assign"
  input: "shape_1/output_decoder_output/kernel/Adam"
  input: "shape_1/output_decoder_output/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam/read"
  op: "Identity"
  input: "shape_1/output_decoder_output/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\224\021\000\000"
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoder_output/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoder_output/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam_1/Assign"
  op: "Assign"
  input: "shape_1/output_decoder_output/kernel/Adam_1"
  input: "shape_1/output_decoder_output/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoder_output/kernel/Adam_1/read"
  op: "Identity"
  input: "shape_1/output_decoder_output/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4500
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoder_output/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoder_output/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam/Assign"
  op: "Assign"
  input: "shape_1/output_decoder_output/bias/Adam"
  input: "shape_1/output_decoder_output/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam/read"
  op: "Identity"
  input: "shape_1/output_decoder_output/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4500
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "shape_1/output_decoder_output/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "shape_1/output_decoder_output/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4500
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam_1/Assign"
  op: "Assign"
  input: "shape_1/output_decoder_output/bias/Adam_1"
  input: "shape_1/output_decoder_output/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "shape_1/output_decoder_output/bias/Adam_1/read"
  op: "Identity"
  input: "shape_1/output_decoder_output/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
}
node {
  name: "training_op/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "training_op/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "training_op/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "training_op/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "training_op/update_conv1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/kernel"
  input: "conv1/kernel/Adam"
  input: "conv1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/0_early_conv_layers/conv1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_conv1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "conv1/bias"
  input: "conv1/bias/Adam"
  input: "conv1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/0_early_conv_layers/conv1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_conv2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/kernel"
  input: "conv2/kernel/Adam"
  input: "conv2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/0_early_conv_layers/conv2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_conv2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "conv2/bias"
  input: "conv2/bias/Adam"
  input: "conv2/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/0_early_conv_layers/conv2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_conv_for_caps/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_for_caps/kernel"
  input: "conv_for_caps/kernel/Adam"
  input: "conv_for_caps/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_conv_for_caps/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "conv_for_caps/bias"
  input: "conv_for_caps/bias/Adam"
  input: "conv_for_caps/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/1st_caps/primary_capsules/conv_for_caps/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_2nd_caps/primary_to_first_fc/W/ApplyAdam"
  op: "ApplyAdam"
  input: "2nd_caps/primary_to_first_fc/W"
  input: "2nd_caps/primary_to_first_fc/W/Adam"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/2nd_caps/primary_to_first_fc/W_tiled_grad/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_offset_logits/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "offset_logits/kernel"
  input: "offset_logits/kernel/Adam"
  input: "offset_logits/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_offset_logits/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "offset_logits/bias"
  input: "offset_logits/bias/Adam"
  input: "offset_logits/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/vernier_offset_loss/vernier_offset_loss/offset_logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_0/output_decoderhidden1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_0/output_decoderhidden1/kernel"
  input: "shape_0/output_decoderhidden1/kernel/Adam"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_0/output_decoderhidden1_bn/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_0/output_decoderhidden1_bn/gamma"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_0/output_decoderhidden1_bn/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_0/output_decoderhidden1_bn/beta"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_0/output_decoderhidden2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_0/output_decoderhidden2/kernel"
  input: "shape_0/output_decoderhidden2/kernel/Adam"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_0/output_decoderhidden2_bn/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_0/output_decoderhidden2_bn/gamma"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_0/output_decoderhidden2_bn/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_0/output_decoderhidden2_bn/beta"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_0/output_decoder_output/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_0/output_decoder_output/kernel"
  input: "shape_0/output_decoder_output/kernel/Adam"
  input: "shape_0/output_decoder_output/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_0/output_decoder_output/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_0/output_decoder_output/bias"
  input: "shape_0/output_decoder_output/bias/Adam"
  input: "shape_0/output_decoder_output/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_1/output_decoderhidden1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_1/output_decoderhidden1/kernel"
  input: "shape_1/output_decoderhidden1/kernel/Adam"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_1/output_decoderhidden1_bn/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_1/output_decoderhidden1_bn/gamma"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_1/output_decoderhidden1_bn/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_1/output_decoderhidden1_bn/beta"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden1_bn/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_1/output_decoderhidden2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_1/output_decoderhidden2/kernel"
  input: "shape_1/output_decoderhidden2/kernel/Adam"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_1/output_decoderhidden2_bn/gamma/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_1/output_decoderhidden2_bn/gamma"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_1/output_decoderhidden2_bn/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_1/output_decoderhidden2_bn/beta"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoderhidden2_bn/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_1/output_decoder_output/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_1/output_decoder_output/kernel"
  input: "shape_1/output_decoder_output/kernel/Adam"
  input: "shape_1/output_decoder_output/kernel/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/update_shape_1/output_decoder_output/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "shape_1/output_decoder_output/bias"
  input: "shape_1/output_decoder_output/bias/Adam"
  input: "shape_1/output_decoder_output/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "training_op/learning_rate"
  input: "training_op/beta1"
  input: "training_op/beta2"
  input: "training_op/epsilon"
  input: "gradients/decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "training_op/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "training_op/beta1"
  input: "^training_op/update_2nd_caps/primary_to_first_fc/W/ApplyAdam"
  input: "^training_op/update_conv1/bias/ApplyAdam"
  input: "^training_op/update_conv1/kernel/ApplyAdam"
  input: "^training_op/update_conv2/bias/ApplyAdam"
  input: "^training_op/update_conv2/kernel/ApplyAdam"
  input: "^training_op/update_conv_for_caps/bias/ApplyAdam"
  input: "^training_op/update_conv_for_caps/kernel/ApplyAdam"
  input: "^training_op/update_offset_logits/bias/ApplyAdam"
  input: "^training_op/update_offset_logits/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoder_output/bias/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoder_output/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoder_output/bias/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoder_output/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2_bn/gamma/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training_op/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "training_op/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_op/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "training_op/beta2"
  input: "^training_op/update_2nd_caps/primary_to_first_fc/W/ApplyAdam"
  input: "^training_op/update_conv1/bias/ApplyAdam"
  input: "^training_op/update_conv1/kernel/ApplyAdam"
  input: "^training_op/update_conv2/bias/ApplyAdam"
  input: "^training_op/update_conv2/kernel/ApplyAdam"
  input: "^training_op/update_conv_for_caps/bias/ApplyAdam"
  input: "^training_op/update_conv_for_caps/kernel/ApplyAdam"
  input: "^training_op/update_offset_logits/bias/ApplyAdam"
  input: "^training_op/update_offset_logits/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoder_output/bias/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoder_output/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoder_output/bias/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoder_output/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2_bn/gamma/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "training_op/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "training_op/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training_op/update"
  op: "NoOp"
  input: "^training_op/Assign"
  input: "^training_op/Assign_1"
  input: "^training_op/update_2nd_caps/primary_to_first_fc/W/ApplyAdam"
  input: "^training_op/update_conv1/bias/ApplyAdam"
  input: "^training_op/update_conv1/kernel/ApplyAdam"
  input: "^training_op/update_conv2/bias/ApplyAdam"
  input: "^training_op/update_conv2/kernel/ApplyAdam"
  input: "^training_op/update_conv_for_caps/bias/ApplyAdam"
  input: "^training_op/update_conv_for_caps/kernel/ApplyAdam"
  input: "^training_op/update_offset_logits/bias/ApplyAdam"
  input: "^training_op/update_offset_logits/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoder_output/bias/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoder_output/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden1_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2/kernel/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_0/output_decoderhidden2_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoder_output/bias/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoder_output/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden1_bn/gamma/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2/kernel/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2_bn/beta/ApplyAdam"
  input: "^training_op/update_shape_1/output_decoderhidden2_bn/gamma/ApplyAdam"
}
node {
  name: "training_op/value"
  op: "Const"
  input: "^training_op/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training_op"
  op: "AssignAdd"
  input: "global_step"
  input: "training_op/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "total_loss/loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^2nd_caps/primary_to_first_fc/W/Adam/Assign"
  input: "^2nd_caps/primary_to_first_fc/W/Adam_1/Assign"
  input: "^2nd_caps/primary_to_first_fc/W/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^conv1/bias/Adam/Assign"
  input: "^conv1/bias/Adam_1/Assign"
  input: "^conv1/bias/Assign"
  input: "^conv1/kernel/Adam/Assign"
  input: "^conv1/kernel/Adam_1/Assign"
  input: "^conv1/kernel/Assign"
  input: "^conv2/bias/Adam/Assign"
  input: "^conv2/bias/Adam_1/Assign"
  input: "^conv2/bias/Assign"
  input: "^conv2/kernel/Adam/Assign"
  input: "^conv2/kernel/Adam_1/Assign"
  input: "^conv2/kernel/Assign"
  input: "^conv_for_caps/bias/Adam/Assign"
  input: "^conv_for_caps/bias/Adam_1/Assign"
  input: "^conv_for_caps/bias/Assign"
  input: "^conv_for_caps/kernel/Adam/Assign"
  input: "^conv_for_caps/kernel/Adam_1/Assign"
  input: "^conv_for_caps/kernel/Assign"
  input: "^global_step/Assign"
  input: "^offset_logits/bias/Adam/Assign"
  input: "^offset_logits/bias/Adam_1/Assign"
  input: "^offset_logits/bias/Assign"
  input: "^offset_logits/kernel/Adam/Assign"
  input: "^offset_logits/kernel/Adam_1/Assign"
  input: "^offset_logits/kernel/Assign"
  input: "^shape_0/output_decoder_output/bias/Adam/Assign"
  input: "^shape_0/output_decoder_output/bias/Adam_1/Assign"
  input: "^shape_0/output_decoder_output/bias/Assign"
  input: "^shape_0/output_decoder_output/kernel/Adam/Assign"
  input: "^shape_0/output_decoder_output/kernel/Adam_1/Assign"
  input: "^shape_0/output_decoder_output/kernel/Assign"
  input: "^shape_0/output_decoderhidden1/kernel/Adam/Assign"
  input: "^shape_0/output_decoderhidden1/kernel/Adam_1/Assign"
  input: "^shape_0/output_decoderhidden1/kernel/Assign"
  input: "^shape_0/output_decoderhidden1_bn/beta/Adam/Assign"
  input: "^shape_0/output_decoderhidden1_bn/beta/Adam_1/Assign"
  input: "^shape_0/output_decoderhidden1_bn/beta/Assign"
  input: "^shape_0/output_decoderhidden1_bn/gamma/Adam/Assign"
  input: "^shape_0/output_decoderhidden1_bn/gamma/Adam_1/Assign"
  input: "^shape_0/output_decoderhidden1_bn/gamma/Assign"
  input: "^shape_0/output_decoderhidden1_bn/moving_mean/Assign"
  input: "^shape_0/output_decoderhidden1_bn/moving_variance/Assign"
  input: "^shape_0/output_decoderhidden2/kernel/Adam/Assign"
  input: "^shape_0/output_decoderhidden2/kernel/Adam_1/Assign"
  input: "^shape_0/output_decoderhidden2/kernel/Assign"
  input: "^shape_0/output_decoderhidden2_bn/beta/Adam/Assign"
  input: "^shape_0/output_decoderhidden2_bn/beta/Adam_1/Assign"
  input: "^shape_0/output_decoderhidden2_bn/beta/Assign"
  input: "^shape_0/output_decoderhidden2_bn/gamma/Adam/Assign"
  input: "^shape_0/output_decoderhidden2_bn/gamma/Adam_1/Assign"
  input: "^shape_0/output_decoderhidden2_bn/gamma/Assign"
  input: "^shape_0/output_decoderhidden2_bn/moving_mean/Assign"
  input: "^shape_0/output_decoderhidden2_bn/moving_variance/Assign"
  input: "^shape_1/output_decoder_output/bias/Adam/Assign"
  input: "^shape_1/output_decoder_output/bias/Adam_1/Assign"
  input: "^shape_1/output_decoder_output/bias/Assign"
  input: "^shape_1/output_decoder_output/kernel/Adam/Assign"
  input: "^shape_1/output_decoder_output/kernel/Adam_1/Assign"
  input: "^shape_1/output_decoder_output/kernel/Assign"
  input: "^shape_1/output_decoderhidden1/kernel/Adam/Assign"
  input: "^shape_1/output_decoderhidden1/kernel/Adam_1/Assign"
  input: "^shape_1/output_decoderhidden1/kernel/Assign"
  input: "^shape_1/output_decoderhidden1_bn/beta/Adam/Assign"
  input: "^shape_1/output_decoderhidden1_bn/beta/Adam_1/Assign"
  input: "^shape_1/output_decoderhidden1_bn/beta/Assign"
  input: "^shape_1/output_decoderhidden1_bn/gamma/Adam/Assign"
  input: "^shape_1/output_decoderhidden1_bn/gamma/Adam_1/Assign"
  input: "^shape_1/output_decoderhidden1_bn/gamma/Assign"
  input: "^shape_1/output_decoderhidden1_bn/moving_mean/Assign"
  input: "^shape_1/output_decoderhidden1_bn/moving_variance/Assign"
  input: "^shape_1/output_decoderhidden2/kernel/Adam/Assign"
  input: "^shape_1/output_decoderhidden2/kernel/Adam_1/Assign"
  input: "^shape_1/output_decoderhidden2/kernel/Assign"
  input: "^shape_1/output_decoderhidden2_bn/beta/Adam/Assign"
  input: "^shape_1/output_decoderhidden2_bn/beta/Adam_1/Assign"
  input: "^shape_1/output_decoderhidden2_bn/beta/Assign"
  input: "^shape_1/output_decoderhidden2_bn/gamma/Adam/Assign"
  input: "^shape_1/output_decoderhidden2_bn/gamma/Adam_1/Assign"
  input: "^shape_1/output_decoderhidden2_bn/gamma/Assign"
  input: "^shape_1/output_decoderhidden2_bn/moving_mean/Assign"
  input: "^shape_1/output_decoderhidden2_bn/moving_variance/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv_for_caps/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv_for_caps/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "2nd_caps/primary_to_first_fc/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "offset_logits/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "offset_logits/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "conv_for_caps/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv_for_caps/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv_for_caps/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv_for_caps/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "2nd_caps/primary_to_first_fc/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "offset_logits/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "offset_logits/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "offset_logits/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "offset_logits/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "conv1/kernel"
        string_val: "conv1/bias"
        string_val: "conv2/kernel"
        string_val: "conv2/bias"
        string_val: "conv_for_caps/kernel"
        string_val: "conv_for_caps/bias"
        string_val: "2nd_caps/primary_to_first_fc/W"
        string_val: "offset_logits/kernel"
        string_val: "offset_logits/bias"
        string_val: "shape_0/output_decoderhidden1/kernel"
        string_val: "shape_0/output_decoderhidden1_bn/gamma"
        string_val: "shape_0/output_decoderhidden1_bn/beta"
        string_val: "shape_0/output_decoderhidden1_bn/moving_mean"
        string_val: "shape_0/output_decoderhidden1_bn/moving_variance"
        string_val: "shape_0/output_decoderhidden2/kernel"
        string_val: "shape_0/output_decoderhidden2_bn/gamma"
        string_val: "shape_0/output_decoderhidden2_bn/beta"
        string_val: "shape_0/output_decoderhidden2_bn/moving_mean"
        string_val: "shape_0/output_decoderhidden2_bn/moving_variance"
        string_val: "shape_0/output_decoder_output/kernel"
        string_val: "shape_0/output_decoder_output/bias"
        string_val: "shape_1/output_decoderhidden1/kernel"
        string_val: "shape_1/output_decoderhidden1_bn/gamma"
        string_val: "shape_1/output_decoderhidden1_bn/beta"
        string_val: "shape_1/output_decoderhidden1_bn/moving_mean"
        string_val: "shape_1/output_decoderhidden1_bn/moving_variance"
        string_val: "shape_1/output_decoderhidden2/kernel"
        string_val: "shape_1/output_decoderhidden2_bn/gamma"
        string_val: "shape_1/output_decoderhidden2_bn/beta"
        string_val: "shape_1/output_decoderhidden2_bn/moving_mean"
        string_val: "shape_1/output_decoderhidden2_bn/moving_variance"
        string_val: "shape_1/output_decoder_output/kernel"
        string_val: "shape_1/output_decoder_output/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv1/kernel/Adam"
        string_val: "conv1/kernel/Adam_1"
        string_val: "conv1/bias/Adam"
        string_val: "conv1/bias/Adam_1"
        string_val: "conv2/kernel/Adam"
        string_val: "conv2/kernel/Adam_1"
        string_val: "conv2/bias/Adam"
        string_val: "conv2/bias/Adam_1"
        string_val: "conv_for_caps/kernel/Adam"
        string_val: "conv_for_caps/kernel/Adam_1"
        string_val: "conv_for_caps/bias/Adam"
        string_val: "conv_for_caps/bias/Adam_1"
        string_val: "2nd_caps/primary_to_first_fc/W/Adam"
        string_val: "2nd_caps/primary_to_first_fc/W/Adam_1"
        string_val: "offset_logits/kernel/Adam"
        string_val: "offset_logits/kernel/Adam_1"
        string_val: "offset_logits/bias/Adam"
        string_val: "offset_logits/bias/Adam_1"
        string_val: "shape_0/output_decoderhidden1/kernel/Adam"
        string_val: "shape_0/output_decoderhidden1/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/gamma/Adam"
        string_val: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/beta/Adam"
        string_val: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
        string_val: "shape_0/output_decoderhidden2/kernel/Adam"
        string_val: "shape_0/output_decoderhidden2/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/gamma/Adam"
        string_val: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/beta/Adam"
        string_val: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
        string_val: "shape_0/output_decoder_output/kernel/Adam"
        string_val: "shape_0/output_decoder_output/kernel/Adam_1"
        string_val: "shape_0/output_decoder_output/bias/Adam"
        string_val: "shape_0/output_decoder_output/bias/Adam_1"
        string_val: "shape_1/output_decoderhidden1/kernel/Adam"
        string_val: "shape_1/output_decoderhidden1/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/gamma/Adam"
        string_val: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/beta/Adam"
        string_val: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
        string_val: "shape_1/output_decoderhidden2/kernel/Adam"
        string_val: "shape_1/output_decoderhidden2/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/gamma/Adam"
        string_val: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/beta/Adam"
        string_val: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
        string_val: "shape_1/output_decoder_output/kernel/Adam"
        string_val: "shape_1/output_decoder_output/kernel/Adam_1"
        string_val: "shape_1/output_decoder_output/bias/Adam"
        string_val: "shape_1/output_decoder_output/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv_for_caps/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv_for_caps/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "2nd_caps/primary_to_first_fc/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "offset_logits/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "offset_logits/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "conv1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "conv1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "conv2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "conv2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "conv_for_caps/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv_for_caps/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv_for_caps/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv_for_caps/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "2nd_caps/primary_to_first_fc/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "offset_logits/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "offset_logits/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "offset_logits/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "offset_logits/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "shape_0/output_decoder_output/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "shape_1/output_decoder_output/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  input: "report_uninitialized_variables_1/IsVariableInitialized_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_72"
  input: "report_uninitialized_variables_1/IsVariableInitialized_73"
  input: "report_uninitialized_variables_1/IsVariableInitialized_74"
  input: "report_uninitialized_variables_1/IsVariableInitialized_75"
  input: "report_uninitialized_variables_1/IsVariableInitialized_76"
  input: "report_uninitialized_variables_1/IsVariableInitialized_77"
  input: "report_uninitialized_variables_1/IsVariableInitialized_78"
  input: "report_uninitialized_variables_1/IsVariableInitialized_79"
  input: "report_uninitialized_variables_1/IsVariableInitialized_80"
  input: "report_uninitialized_variables_1/IsVariableInitialized_81"
  input: "report_uninitialized_variables_1/IsVariableInitialized_82"
  input: "report_uninitialized_variables_1/IsVariableInitialized_83"
  input: "report_uninitialized_variables_1/IsVariableInitialized_84"
  input: "report_uninitialized_variables_1/IsVariableInitialized_85"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "conv1/kernel"
        string_val: "conv1/bias"
        string_val: "conv2/kernel"
        string_val: "conv2/bias"
        string_val: "conv_for_caps/kernel"
        string_val: "conv_for_caps/bias"
        string_val: "2nd_caps/primary_to_first_fc/W"
        string_val: "offset_logits/kernel"
        string_val: "offset_logits/bias"
        string_val: "shape_0/output_decoderhidden1/kernel"
        string_val: "shape_0/output_decoderhidden1_bn/gamma"
        string_val: "shape_0/output_decoderhidden1_bn/beta"
        string_val: "shape_0/output_decoderhidden1_bn/moving_mean"
        string_val: "shape_0/output_decoderhidden1_bn/moving_variance"
        string_val: "shape_0/output_decoderhidden2/kernel"
        string_val: "shape_0/output_decoderhidden2_bn/gamma"
        string_val: "shape_0/output_decoderhidden2_bn/beta"
        string_val: "shape_0/output_decoderhidden2_bn/moving_mean"
        string_val: "shape_0/output_decoderhidden2_bn/moving_variance"
        string_val: "shape_0/output_decoder_output/kernel"
        string_val: "shape_0/output_decoder_output/bias"
        string_val: "shape_1/output_decoderhidden1/kernel"
        string_val: "shape_1/output_decoderhidden1_bn/gamma"
        string_val: "shape_1/output_decoderhidden1_bn/beta"
        string_val: "shape_1/output_decoderhidden1_bn/moving_mean"
        string_val: "shape_1/output_decoderhidden1_bn/moving_variance"
        string_val: "shape_1/output_decoderhidden2/kernel"
        string_val: "shape_1/output_decoderhidden2_bn/gamma"
        string_val: "shape_1/output_decoderhidden2_bn/beta"
        string_val: "shape_1/output_decoderhidden2_bn/moving_mean"
        string_val: "shape_1/output_decoderhidden2_bn/moving_variance"
        string_val: "shape_1/output_decoder_output/kernel"
        string_val: "shape_1/output_decoder_output/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv1/kernel/Adam"
        string_val: "conv1/kernel/Adam_1"
        string_val: "conv1/bias/Adam"
        string_val: "conv1/bias/Adam_1"
        string_val: "conv2/kernel/Adam"
        string_val: "conv2/kernel/Adam_1"
        string_val: "conv2/bias/Adam"
        string_val: "conv2/bias/Adam_1"
        string_val: "conv_for_caps/kernel/Adam"
        string_val: "conv_for_caps/kernel/Adam_1"
        string_val: "conv_for_caps/bias/Adam"
        string_val: "conv_for_caps/bias/Adam_1"
        string_val: "2nd_caps/primary_to_first_fc/W/Adam"
        string_val: "2nd_caps/primary_to_first_fc/W/Adam_1"
        string_val: "offset_logits/kernel/Adam"
        string_val: "offset_logits/kernel/Adam_1"
        string_val: "offset_logits/bias/Adam"
        string_val: "offset_logits/bias/Adam_1"
        string_val: "shape_0/output_decoderhidden1/kernel/Adam"
        string_val: "shape_0/output_decoderhidden1/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/gamma/Adam"
        string_val: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/beta/Adam"
        string_val: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
        string_val: "shape_0/output_decoderhidden2/kernel/Adam"
        string_val: "shape_0/output_decoderhidden2/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/gamma/Adam"
        string_val: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/beta/Adam"
        string_val: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
        string_val: "shape_0/output_decoder_output/kernel/Adam"
        string_val: "shape_0/output_decoder_output/kernel/Adam_1"
        string_val: "shape_0/output_decoder_output/bias/Adam"
        string_val: "shape_0/output_decoder_output/bias/Adam_1"
        string_val: "shape_1/output_decoderhidden1/kernel/Adam"
        string_val: "shape_1/output_decoderhidden1/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/gamma/Adam"
        string_val: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/beta/Adam"
        string_val: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
        string_val: "shape_1/output_decoderhidden2/kernel/Adam"
        string_val: "shape_1/output_decoderhidden2/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/gamma/Adam"
        string_val: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/beta/Adam"
        string_val: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
        string_val: "shape_1/output_decoder_output/kernel/Adam"
        string_val: "shape_1/output_decoder_output/kernel/Adam_1"
        string_val: "shape_1/output_decoder_output/bias/Adam"
        string_val: "shape_1/output_decoder_output/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge_2/MergeSummary"
  op: "MergeSummary"
  input: "input"
  input: "0_early_conv_layers/1st_conv_layer"
  input: "0_early_conv_layers/2nd_conv_layer"
  input: "1st_caps/Primary_capsule_norms_1"
  input: "2nd_caps/Output_capsule_norms"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/training_vernier_offset_xentropy"
  input: "decoders/vernier_offset_loss/vernier_offset_loss/accuracy_1"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden1_bn"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_hidden2_bn"
  input: "decoders/reconstruction_loss/shape_0/output_decoderdecoder/output_decoder_output_1"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden1_bn"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_hidden2_bn"
  input: "decoders/reconstruction_loss/shape_1/output_decoderdecoder/output_decoder_output_1"
  input: "decoders/reconstruction_loss/reconstruction_loss_sum"
  input: "decoders/reconstruction_loss/decoder_output"
  input: "total_loss/total_loss"
  input: "accuracy/accuracy_1"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 18
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_754c7fe377df49b991edee3341a768e9/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "2nd_caps/primary_to_first_fc/W"
        string_val: "2nd_caps/primary_to_first_fc/W/Adam"
        string_val: "2nd_caps/primary_to_first_fc/W/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv1/bias"
        string_val: "conv1/bias/Adam"
        string_val: "conv1/bias/Adam_1"
        string_val: "conv1/kernel"
        string_val: "conv1/kernel/Adam"
        string_val: "conv1/kernel/Adam_1"
        string_val: "conv2/bias"
        string_val: "conv2/bias/Adam"
        string_val: "conv2/bias/Adam_1"
        string_val: "conv2/kernel"
        string_val: "conv2/kernel/Adam"
        string_val: "conv2/kernel/Adam_1"
        string_val: "conv_for_caps/bias"
        string_val: "conv_for_caps/bias/Adam"
        string_val: "conv_for_caps/bias/Adam_1"
        string_val: "conv_for_caps/kernel"
        string_val: "conv_for_caps/kernel/Adam"
        string_val: "conv_for_caps/kernel/Adam_1"
        string_val: "global_step"
        string_val: "offset_logits/bias"
        string_val: "offset_logits/bias/Adam"
        string_val: "offset_logits/bias/Adam_1"
        string_val: "offset_logits/kernel"
        string_val: "offset_logits/kernel/Adam"
        string_val: "offset_logits/kernel/Adam_1"
        string_val: "shape_0/output_decoder_output/bias"
        string_val: "shape_0/output_decoder_output/bias/Adam"
        string_val: "shape_0/output_decoder_output/bias/Adam_1"
        string_val: "shape_0/output_decoder_output/kernel"
        string_val: "shape_0/output_decoder_output/kernel/Adam"
        string_val: "shape_0/output_decoder_output/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden1/kernel"
        string_val: "shape_0/output_decoderhidden1/kernel/Adam"
        string_val: "shape_0/output_decoderhidden1/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/beta"
        string_val: "shape_0/output_decoderhidden1_bn/beta/Adam"
        string_val: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/gamma"
        string_val: "shape_0/output_decoderhidden1_bn/gamma/Adam"
        string_val: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/moving_mean"
        string_val: "shape_0/output_decoderhidden1_bn/moving_variance"
        string_val: "shape_0/output_decoderhidden2/kernel"
        string_val: "shape_0/output_decoderhidden2/kernel/Adam"
        string_val: "shape_0/output_decoderhidden2/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/beta"
        string_val: "shape_0/output_decoderhidden2_bn/beta/Adam"
        string_val: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/gamma"
        string_val: "shape_0/output_decoderhidden2_bn/gamma/Adam"
        string_val: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/moving_mean"
        string_val: "shape_0/output_decoderhidden2_bn/moving_variance"
        string_val: "shape_1/output_decoder_output/bias"
        string_val: "shape_1/output_decoder_output/bias/Adam"
        string_val: "shape_1/output_decoder_output/bias/Adam_1"
        string_val: "shape_1/output_decoder_output/kernel"
        string_val: "shape_1/output_decoder_output/kernel/Adam"
        string_val: "shape_1/output_decoder_output/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden1/kernel"
        string_val: "shape_1/output_decoderhidden1/kernel/Adam"
        string_val: "shape_1/output_decoderhidden1/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/beta"
        string_val: "shape_1/output_decoderhidden1_bn/beta/Adam"
        string_val: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/gamma"
        string_val: "shape_1/output_decoderhidden1_bn/gamma/Adam"
        string_val: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/moving_mean"
        string_val: "shape_1/output_decoderhidden1_bn/moving_variance"
        string_val: "shape_1/output_decoderhidden2/kernel"
        string_val: "shape_1/output_decoderhidden2/kernel/Adam"
        string_val: "shape_1/output_decoderhidden2/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/beta"
        string_val: "shape_1/output_decoderhidden2_bn/beta/Adam"
        string_val: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/gamma"
        string_val: "shape_1/output_decoderhidden2_bn/gamma/Adam"
        string_val: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/moving_mean"
        string_val: "shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "2nd_caps/primary_to_first_fc/W"
  input: "2nd_caps/primary_to_first_fc/W/Adam"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1"
  input: "beta1_power"
  input: "beta2_power"
  input: "conv1/bias"
  input: "conv1/bias/Adam"
  input: "conv1/bias/Adam_1"
  input: "conv1/kernel"
  input: "conv1/kernel/Adam"
  input: "conv1/kernel/Adam_1"
  input: "conv2/bias"
  input: "conv2/bias/Adam"
  input: "conv2/bias/Adam_1"
  input: "conv2/kernel"
  input: "conv2/kernel/Adam"
  input: "conv2/kernel/Adam_1"
  input: "conv_for_caps/bias"
  input: "conv_for_caps/bias/Adam"
  input: "conv_for_caps/bias/Adam_1"
  input: "conv_for_caps/kernel"
  input: "conv_for_caps/kernel/Adam"
  input: "conv_for_caps/kernel/Adam_1"
  input: "global_step"
  input: "offset_logits/bias"
  input: "offset_logits/bias/Adam"
  input: "offset_logits/bias/Adam_1"
  input: "offset_logits/kernel"
  input: "offset_logits/kernel/Adam"
  input: "offset_logits/kernel/Adam_1"
  input: "shape_0/output_decoder_output/bias"
  input: "shape_0/output_decoder_output/bias/Adam"
  input: "shape_0/output_decoder_output/bias/Adam_1"
  input: "shape_0/output_decoder_output/kernel"
  input: "shape_0/output_decoder_output/kernel/Adam"
  input: "shape_0/output_decoder_output/kernel/Adam_1"
  input: "shape_0/output_decoderhidden1/kernel"
  input: "shape_0/output_decoderhidden1/kernel/Adam"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1"
  input: "shape_0/output_decoderhidden1_bn/beta"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
  input: "shape_0/output_decoderhidden1_bn/gamma"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
  input: "shape_0/output_decoderhidden1_bn/moving_mean"
  input: "shape_0/output_decoderhidden1_bn/moving_variance"
  input: "shape_0/output_decoderhidden2/kernel"
  input: "shape_0/output_decoderhidden2/kernel/Adam"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1"
  input: "shape_0/output_decoderhidden2_bn/beta"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
  input: "shape_0/output_decoderhidden2_bn/gamma"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
  input: "shape_0/output_decoderhidden2_bn/moving_mean"
  input: "shape_0/output_decoderhidden2_bn/moving_variance"
  input: "shape_1/output_decoder_output/bias"
  input: "shape_1/output_decoder_output/bias/Adam"
  input: "shape_1/output_decoder_output/bias/Adam_1"
  input: "shape_1/output_decoder_output/kernel"
  input: "shape_1/output_decoder_output/kernel/Adam"
  input: "shape_1/output_decoder_output/kernel/Adam_1"
  input: "shape_1/output_decoderhidden1/kernel"
  input: "shape_1/output_decoderhidden1/kernel/Adam"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1"
  input: "shape_1/output_decoderhidden1_bn/beta"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
  input: "shape_1/output_decoderhidden1_bn/gamma"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
  input: "shape_1/output_decoderhidden1_bn/moving_mean"
  input: "shape_1/output_decoderhidden1_bn/moving_variance"
  input: "shape_1/output_decoderhidden2/kernel"
  input: "shape_1/output_decoderhidden2/kernel/Adam"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1"
  input: "shape_1/output_decoderhidden2_bn/beta"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
  input: "shape_1/output_decoderhidden2_bn/gamma"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
  input: "shape_1/output_decoderhidden2_bn/moving_mean"
  input: "shape_1/output_decoderhidden2_bn/moving_variance"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "2nd_caps/primary_to_first_fc/W"
        string_val: "2nd_caps/primary_to_first_fc/W/Adam"
        string_val: "2nd_caps/primary_to_first_fc/W/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "conv1/bias"
        string_val: "conv1/bias/Adam"
        string_val: "conv1/bias/Adam_1"
        string_val: "conv1/kernel"
        string_val: "conv1/kernel/Adam"
        string_val: "conv1/kernel/Adam_1"
        string_val: "conv2/bias"
        string_val: "conv2/bias/Adam"
        string_val: "conv2/bias/Adam_1"
        string_val: "conv2/kernel"
        string_val: "conv2/kernel/Adam"
        string_val: "conv2/kernel/Adam_1"
        string_val: "conv_for_caps/bias"
        string_val: "conv_for_caps/bias/Adam"
        string_val: "conv_for_caps/bias/Adam_1"
        string_val: "conv_for_caps/kernel"
        string_val: "conv_for_caps/kernel/Adam"
        string_val: "conv_for_caps/kernel/Adam_1"
        string_val: "global_step"
        string_val: "offset_logits/bias"
        string_val: "offset_logits/bias/Adam"
        string_val: "offset_logits/bias/Adam_1"
        string_val: "offset_logits/kernel"
        string_val: "offset_logits/kernel/Adam"
        string_val: "offset_logits/kernel/Adam_1"
        string_val: "shape_0/output_decoder_output/bias"
        string_val: "shape_0/output_decoder_output/bias/Adam"
        string_val: "shape_0/output_decoder_output/bias/Adam_1"
        string_val: "shape_0/output_decoder_output/kernel"
        string_val: "shape_0/output_decoder_output/kernel/Adam"
        string_val: "shape_0/output_decoder_output/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden1/kernel"
        string_val: "shape_0/output_decoderhidden1/kernel/Adam"
        string_val: "shape_0/output_decoderhidden1/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/beta"
        string_val: "shape_0/output_decoderhidden1_bn/beta/Adam"
        string_val: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/gamma"
        string_val: "shape_0/output_decoderhidden1_bn/gamma/Adam"
        string_val: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
        string_val: "shape_0/output_decoderhidden1_bn/moving_mean"
        string_val: "shape_0/output_decoderhidden1_bn/moving_variance"
        string_val: "shape_0/output_decoderhidden2/kernel"
        string_val: "shape_0/output_decoderhidden2/kernel/Adam"
        string_val: "shape_0/output_decoderhidden2/kernel/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/beta"
        string_val: "shape_0/output_decoderhidden2_bn/beta/Adam"
        string_val: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/gamma"
        string_val: "shape_0/output_decoderhidden2_bn/gamma/Adam"
        string_val: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
        string_val: "shape_0/output_decoderhidden2_bn/moving_mean"
        string_val: "shape_0/output_decoderhidden2_bn/moving_variance"
        string_val: "shape_1/output_decoder_output/bias"
        string_val: "shape_1/output_decoder_output/bias/Adam"
        string_val: "shape_1/output_decoder_output/bias/Adam_1"
        string_val: "shape_1/output_decoder_output/kernel"
        string_val: "shape_1/output_decoder_output/kernel/Adam"
        string_val: "shape_1/output_decoder_output/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden1/kernel"
        string_val: "shape_1/output_decoderhidden1/kernel/Adam"
        string_val: "shape_1/output_decoderhidden1/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/beta"
        string_val: "shape_1/output_decoderhidden1_bn/beta/Adam"
        string_val: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/gamma"
        string_val: "shape_1/output_decoderhidden1_bn/gamma/Adam"
        string_val: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
        string_val: "shape_1/output_decoderhidden1_bn/moving_mean"
        string_val: "shape_1/output_decoderhidden1_bn/moving_variance"
        string_val: "shape_1/output_decoderhidden2/kernel"
        string_val: "shape_1/output_decoderhidden2/kernel/Adam"
        string_val: "shape_1/output_decoderhidden2/kernel/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/beta"
        string_val: "shape_1/output_decoderhidden2_bn/beta/Adam"
        string_val: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/gamma"
        string_val: "shape_1/output_decoderhidden2_bn/gamma/Adam"
        string_val: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
        string_val: "shape_1/output_decoderhidden2_bn/moving_mean"
        string_val: "shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "2nd_caps/primary_to_first_fc/W"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "2nd_caps/primary_to_first_fc/W/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "2nd_caps/primary_to_first_fc/W/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 960
          }
          dim {
            size: 8
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@2nd_caps/primary_to_first_fc/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "conv1/bias"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "conv1/bias/Adam"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "conv1/bias/Adam_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "conv1/kernel"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "conv1/kernel/Adam"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "conv1/kernel/Adam_1"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "conv2/bias"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "conv2/bias/Adam"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "conv2/bias/Adam_1"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "conv2/kernel"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "conv2/kernel/Adam"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "conv2/kernel/Adam_1"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 7
          }
          dim {
            size: 7
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "conv_for_caps/bias"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "conv_for_caps/bias/Adam"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "conv_for_caps/bias/Adam_1"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "conv_for_caps/kernel"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "conv_for_caps/kernel/Adam"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "conv_for_caps/kernel/Adam_1"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv_for_caps/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "offset_logits/bias"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "offset_logits/bias/Adam"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "offset_logits/bias/Adam_1"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "offset_logits/kernel"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "offset_logits/kernel/Adam"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "offset_logits/kernel/Adam_1"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@offset_logits/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "shape_0/output_decoder_output/bias"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "shape_0/output_decoder_output/bias/Adam"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "shape_0/output_decoder_output/bias/Adam_1"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "shape_0/output_decoder_output/kernel"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "shape_0/output_decoder_output/kernel/Adam"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "shape_0/output_decoder_output/kernel/Adam_1"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "shape_0/output_decoderhidden1/kernel"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "shape_0/output_decoderhidden1/kernel/Adam"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "shape_0/output_decoderhidden1/kernel/Adam_1"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/beta"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/beta/Adam_1"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/gamma"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/gamma/Adam_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/moving_mean"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "shape_0/output_decoderhidden1_bn/moving_variance"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "shape_0/output_decoderhidden2/kernel"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "shape_0/output_decoderhidden2/kernel/Adam"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "shape_0/output_decoderhidden2/kernel/Adam_1"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/beta"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/beta/Adam_1"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/gamma"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/gamma/Adam_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/moving_mean"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "shape_0/output_decoderhidden2_bn/moving_variance"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_0/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "shape_1/output_decoder_output/bias"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "shape_1/output_decoder_output/bias/Adam"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "shape_1/output_decoder_output/bias/Adam_1"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "shape_1/output_decoder_output/kernel"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "shape_1/output_decoder_output/kernel/Adam"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "shape_1/output_decoder_output/kernel/Adam_1"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoder_output/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 4500
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "shape_1/output_decoderhidden1/kernel"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "shape_1/output_decoderhidden1/kernel/Adam"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "shape_1/output_decoderhidden1/kernel/Adam_1"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/beta"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/beta/Adam_1"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/gamma"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/gamma/Adam_1"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/moving_mean"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "shape_1/output_decoderhidden1_bn/moving_variance"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden1_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "shape_1/output_decoderhidden2/kernel"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "shape_1/output_decoderhidden2/kernel/Adam"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "shape_1/output_decoderhidden2/kernel/Adam_1"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/beta"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/beta/Adam_1"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/beta"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/gamma"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/gamma/Adam_1"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/gamma"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/moving_mean"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_mean"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "shape_1/output_decoderhidden2_bn/moving_variance"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shape_1/output_decoderhidden2_bn/moving_variance"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_2"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_3"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_4"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_5"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_6"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_7"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_8"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "_make_dataset_o8YG1aucJs8"
      output_arg {
        name: "prefetchdataset"
        type: DT_VARIANT
      }
      is_stateful: true
    }
    node_def {
      name: "TensorSliceDataset/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "./data/train.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/flat_filenames/shape"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/flat_filenames"
      op: "Reshape"
      input: "TensorSliceDataset/Const:output:0"
      input: "TensorSliceDataset/flat_filenames/shape:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/flat_filenames:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/cycle_length"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 32
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/block_length"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/sloppy"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/buffer_output_elements"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset/prefetch_input_elements"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 64
          }
        }
      }
    }
    node_def {
      name: "ParallelInterleaveDataset"
      op: "ParallelInterleaveDataset"
      input: "TensorSliceDataset:handle:0"
      input: "ParallelInterleaveDataset/cycle_length:output:0"
      input: "ParallelInterleaveDataset/block_length:output:0"
      input: "ParallelInterleaveDataset/sloppy:output:0"
      input: "ParallelInterleaveDataset/buffer_output_elements:output:0"
      input: "ParallelInterleaveDataset/prefetch_input_elements:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_52oRgbbAY9U"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/num_parallel_calls"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "ParallelInterleaveDataset:handle:0"
      input: "ParallelMapDataset/num_parallel_calls:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "tf_data_structured_function_wrapper_k5NHdyBLAvc"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              unknown_rank: true
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1024
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/seed2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "ParallelMapDataset:handle:0"
      input: "ShuffleDataset/buffer_size:output:0"
      input: "ShuffleDataset/seed:output:0"
      input: "ShuffleDataset/seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              unknown_rank: true
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "RepeatDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ShuffleDataset:handle:0"
      input: "RepeatDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              unknown_rank: true
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/batch_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 64
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/drop_remainder"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "RepeatDataset:handle:0"
      input: "BatchDatasetV2/batch_size:output:0"
      input: "BatchDatasetV2/drop_remainder:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              unknown_rank: true
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    node_def {
      name: "FilterDataset/batch_size_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 64
          }
        }
      }
    }
    node_def {
      name: "FilterDataset"
      op: "FilterDataset"
      input: "BatchDatasetV2:handle:0"
      input: "FilterDataset/batch_size_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
            type: DT_INT64
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              unknown_rank: true
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
      attr {
        key: "predicate"
        value {
          func {
            name: "tf_data_structured_function_wrapper_SCfNa1XMnn4"
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset/buffer_size_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset"
      op: "PrefetchDataset"
      input: "FilterDataset:handle:0"
      input: "PrefetchDataset/buffer_size_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
            shape {
              unknown_rank: true
            }
            shape {
              dim {
                size: 64
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_INT64
          }
        }
      }
    }
    ret {
      key: "prefetchdataset"
      value: "PrefetchDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_52oRgbbAY9U"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "tfrecorddataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "compression_type"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "arg0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      device: "/device:CPU:0"
    }
    ret {
      key: "tfrecorddataset"
      value: "TFRecordDataset:handle:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_k5NHdyBLAvc"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "decoderaw"
        type: DT_FLOAT
      }
      output_arg {
        name: "decoderaw_1"
        type: DT_FLOAT
      }
      output_arg {
        name: "decoderaw_2"
        type: DT_FLOAT
      }
      output_arg {
        name: "squeeze"
        type: DT_FLOAT
      }
      output_arg {
        name: "decoderaw_4"
        type: DT_INT64
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "ParseSingleExample/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_3"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_4"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "arg0"
      input: "ParseSingleExample/Const:output:0"
      input: "ParseSingleExample/Const_1:output:0"
      input: "ParseSingleExample/Const_2:output:0"
      input: "ParseSingleExample/Const_3:output:0"
      input: "ParseSingleExample/Const_4:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_STRING
            type: DT_STRING
            type: DT_STRING
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "labels"
            s: "multi_shape_img"
            s: "n_elements"
            s: "single_shape_img"
            s: "vernier_label"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "DecodeRaw"
      op: "DecodeRaw"
      input: "ParseSingleExample/ParseSingleExample:dense_values:1"
      device: "/device:CPU:0"
      attr {
        key: "little_endian"
        value {
          b: true
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "DecodeRaw_1"
      op: "DecodeRaw"
      input: "ParseSingleExample/ParseSingleExample:dense_values:3"
      device: "/device:CPU:0"
      attr {
        key: "little_endian"
        value {
          b: true
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "DecodeRaw_2"
      op: "DecodeRaw"
      input: "ParseSingleExample/ParseSingleExample:dense_values:0"
      device: "/device:CPU:0"
      attr {
        key: "little_endian"
        value {
          b: true
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "DecodeRaw_3"
      op: "DecodeRaw"
      input: "ParseSingleExample/ParseSingleExample:dense_values:4"
      device: "/device:CPU:0"
      attr {
        key: "little_endian"
        value {
          b: true
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Squeeze"
      op: "Squeeze"
      input: "DecodeRaw_3:output:0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "squeeze_dims"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "DecodeRaw_4"
      op: "DecodeRaw"
      input: "ParseSingleExample/ParseSingleExample:dense_values:2"
      device: "/device:CPU:0"
      attr {
        key: "little_endian"
        value {
          b: true
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT64
        }
      }
    }
    ret {
      key: "decoderaw"
      value: "DecodeRaw:output:0"
    }
    ret {
      key: "decoderaw_1"
      value: "DecodeRaw_1:output:0"
    }
    ret {
      key: "decoderaw_2"
      value: "DecodeRaw_2:output:0"
    }
    ret {
      key: "decoderaw_4"
      value: "DecodeRaw_4:output:0"
    }
    ret {
      key: "squeeze"
      value: "Squeeze:output:0"
    }
  }
  function {
    signature {
      name: "tf_data_structured_function_wrapper_SCfNa1XMnn4"
      input_arg {
        name: "arg0"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg1"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg2"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg3"
        type: DT_FLOAT
      }
      input_arg {
        name: "arg4"
        type: DT_INT64
      }
      input_arg {
        name: "equal_placeholder"
        type: DT_INT64
      }
      output_arg {
        name: "equal"
        type: DT_BOOL
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "Shape"
      op: "Shape"
      input: "arg0"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT64
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "Shape:output:0"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Equal"
      op: "Equal"
      input: "strided_slice:output:0"
      input: "equal_placeholder"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
    }
    ret {
      key: "equal"
      value: "Equal:z:0"
    }
  }
}
versions {
  producer: 26
  min_consumer: 12
}
